<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>JustGo&#39;s 收纳盒</title>
        <subtitle>a easy crypt0er</subtitle>
        <icon>https://justgo00.github.io/images/favicon.ico</icon>
        <link>https://justgo00.github.io</link>
        <author>
          <name>JustG0</name>
        </author>
        <description>A study crypto soon small chicken, hope big boss to give me advice.</description>
        <language>zh-CN</language>
        <pubDate>Tue, 06 Feb 2024 16:03:17 +0800</pubDate>
        <lastBuildDate>Tue, 06 Feb 2024 16:03:17 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">https://justgo00.github.io/2024/02/06/L3HCTF%202024/</guid>
            <title>L3HCTF 2024 -Cry方向</title>
            <link>https://justgo00.github.io/2024/02/06/L3HCTF%202024/</link>
            <pubDate>Tue, 06 Feb 2024 16:03:17 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;babyspn&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#babyspn&#34;&gt;#&lt;/a&gt; &lt;strong&gt;babySPN&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;K = [&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;给了 k，按照代码逻辑直接跑，非预期。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;K = [&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hash_value = sha256(long_to_bytes(list_to_int(K))).hexdigest()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(hash_value)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://n0b8wz8yo3e.feishu.cn/space/api/box/stream/download/asynccode/?code=OTliYTE3YjJlNzIzNzhkZDQ0YjAyOGJlNjQxZmM3YTJfRWZFM0JFS05QSlRIVWlaS25SVWRqRG1BMWFuZ3JvVlNfVG9rZW46WUhSS2I2MEQxb2NqSFF4dFlXZ2NwYlMwbndjXzE3MDcyMDY1MjE6MTcwNzIxMDEyMV9WNA&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;babyspn-revenge&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#babyspn-revenge&#34;&gt;#&lt;/a&gt; &lt;strong&gt;babySPN revenge&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;中间相遇攻击，round_func 是线性的，可以反推，正向跑两轮需要知道 key 的前 20bit，由于 enc 中的&lt;/p&gt;
&lt;p&gt;for i in range(16):&lt;/p&gt;
&lt;p&gt;​     Y[i] ^= K[kstart+i]&lt;/p&gt;
&lt;p&gt;函数，逆向跑两轮需要 key 的后 24bit，先跑出正向两轮的所有结果，再跑逆向两轮，如果与正向相同，则输出。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; hashlib &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; sha256&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; long_to_bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; tqdm &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; tqdm&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;bin_to_list&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;r, bit_len&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt; = [r &amp;gt;&amp;gt; d &amp;amp; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; d &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(bit_len)][::-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;list_to_int&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;.join(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(i) &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;), &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Pbox=[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Sbox=[&lt;span class=&#34;number&#34;&gt;14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;round_func&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;X,r,K&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    kstart=&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;*r - &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    XX = [&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] * &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        XX[i] = X[i] ^ K[kstart+i]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        value = list_to_int(XX[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;*i:&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;*i+&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        s_value = Sbox[value]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        s_list = bin_to_list(s_value, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        XX[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;*i],XX[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;*i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;],XX[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;*i+&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;],XX[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;*i+&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] = s_list[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;],s_list[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;],s_list[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;],s_list[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Y=[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] * &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Y[Pbox[i]-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]=XX[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; Y&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;enc&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;X,K&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Y = round_func(X,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,K)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Y = round_func(Y,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,K)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# Y = round_func(Y,3,K)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# Y = round_func(Y,4,K)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# kstart=4*5 - 4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# for i in range(16):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#     Y[i] ^= K[kstart+i]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; Y&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;re_round_func&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;Y,r,K&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    XX = [&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]*&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        XX[i] = Y[Pbox[i]-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        value = list_to_int(XX[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; * i:&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; * i + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        s_value = Sbox.index(value)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        s_list = bin_to_list(s_value, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        XX[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; * i], XX[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; * i + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;], XX[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; * i + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;], XX[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; * i + &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] = s_list[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;], s_list[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;], s_list[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;], s_list[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    kstart = &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; * r - &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    X = [&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] * &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        X[i] = XX[i] ^ K[kstart+i]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; X&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x1,x2,x3,x4 = [&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]*&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;,[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]*&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;,[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]*&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;,[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]*&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x1[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;],x2[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;],x3[&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;],x4[&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;forward = &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; tqdm(&lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;**&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    K0 = bin_to_list(i,&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    CC1,CC2,CC3,CC4 = enc(x1,K0),enc(x2,K0),enc(x3,K0),enc(x4,K0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    num = list_to_int(CC1+CC2+CC3+CC4)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    forward.add(num)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;C_final0 = [&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;C_final1 = [&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;C_final2 = [&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;C_final3 = [&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; tqdm(&lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;**&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt;)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    K1 = bin_to_list(i,&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    c_final0,c_final1,c_final2,c_final3 = [&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]*&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;,[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]*&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;,[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]*&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;,[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]*&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i0 &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        c_final0[i0] = K1[&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;+i0]^C_final0[i0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        c_final1[i0] = K1[&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;+i0]^C_final1[i0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        c_final2[i0] = K1[&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;+i0]^C_final2[i0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        c_final3[i0] = K1[&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;+i0]^C_final3[i0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    C1,C2,C3,C4 = re_round_func(c_final0,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,K1),re_round_func(c_final1,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,K1),re_round_func(c_final2,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,K1),re_round_func(c_final3,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,K1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    C1,C2,C3,C4 = re_round_func(C1,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,K1),re_round_func(C2,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,K1),re_round_func(C3,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,K1),re_round_func(C4,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,K1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    num1 = list_to_int(C1+C2+C3+C4)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; num1 &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; forward:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(K1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://n0b8wz8yo3e.feishu.cn/space/api/box/stream/download/asynccode/?code=ZDFjOTQ0MGM1NTQ2NmM5MjFjMTZiNjQ0NjNiN2QxZTFfSFFqc25zM1Z6b1V0TlZST0hPMTRsT0V6dXozUDU3OW5fVG9rZW46Tm5Kb2JFQmJMb1RKVUl4aEZtZ2NGRzJxbmNoXzE3MDcyMDY1MjE6MTcwNzIxMDEyMV9WNA&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到后 24bit 的 key，前八 bit 正向加密爆破。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; hashlib &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; sha256&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; long_to_bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; tqdm &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; tqdm&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;bin_to_list&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;r, bit_len&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt; = [r &amp;gt;&amp;gt; d &amp;amp; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; d &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(bit_len)][::-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;list_to_int&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;.join(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(i) &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;), &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Pbox=[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Sbox=[&lt;span class=&#34;number&#34;&gt;14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;round_func&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;X,r,K&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    kstart=&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;*r - &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    XX = [&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] * &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        XX[i] = X[i] ^ K[kstart+i]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        value = list_to_int(XX[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;*i:&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;*i+&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        s_value = Sbox[value]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        s_list = bin_to_list(s_value, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        XX[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;*i],XX[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;*i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;],XX[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;*i+&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;],XX[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;*i+&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] = s_list[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;],s_list[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;],s_list[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;],s_list[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Y=[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] * &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Y[Pbox[i]-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]=XX[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; Y&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;enc&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;X,K&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Y = round_func(X,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,K)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Y = round_func(Y,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,K)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Y = round_func(Y,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,K)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Y = round_func(Y,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,K)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    kstart=&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Y[i] ^= K[kstart+i]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; Y&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x1,x2,x3,x4 = [&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]*&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;,[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]*&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;,[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]*&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;,[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]*&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x1[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;],x2[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;],x3[&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;],x4[&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;k = [&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;**&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    key = bin_to_list(i,&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) + k&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    C1,C2,C3,C4 = enc(x1,key),enc(x2,key),enc(x3,key),enc(x4,key)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; C1 ==  [&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; C2 == [&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(key)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        hash_value = sha256(long_to_bytes(list_to_int(key))).hexdigest()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(hash_value)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://n0b8wz8yo3e.feishu.cn/space/api/box/stream/download/asynccode/?code=MGVjMzM5NDUyZjZmM2VhMjg3NDNjMzk5NDZlMmU5MTFfNXFhMjJJZlk1WHBzWGI1c2F1UEROMmlNY3FUa3N5R1RfVG9rZW46VFZPT2JFNm9Sb3Y1ek54VVA4Z2N3M2dqbnBnXzE3MDcyMDY1MjE6MTcwNzIxMDEyMV9WNA&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;badrlwe&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#badrlwe&#34;&gt;#&lt;/a&gt; badrlwe&lt;/h2&gt;
&lt;p&gt;f = x^N - 1 上存在问题，f 可以分解为多个多项式相乘，可以找到 D^3CTF 2023 中的&lt;strong&gt; d3bdd&lt;/strong&gt; 问题，f 可以分为多个因子，于是降低 degree 使用 LLL 算法求出 s 关于不同 f 因子的余数，再使用 crt 求解，由于 s 最大度数不超过 64，于是只需要求解 f 中度数小于 64 的因子即可。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; time &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; sage.&lt;span class=&#34;built_in&#34;&gt;all&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; subprocess &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; check_output&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; re &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; findall&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q = &lt;span class=&#34;number&#34;&gt;1219077173&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;F.&amp;lt;x&amp;gt; = Zmod(q)[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;N = &lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x = F.gen()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;f = x^N - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;number&#34;&gt;216047404&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1023&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1008199117&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1022&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;39562072&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1021&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;189992355&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1020&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1087671639&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1019&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;541371337&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1018&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1146044200&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1017&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;212969175&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1016&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1114159572&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1015&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1112032860&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1014&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1204883609&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1013&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1181544913&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1012&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;851496082&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1011&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;222877006&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1010&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;163176236&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1009&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;268697504&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1008&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;613151090&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1007&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1185245256&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1006&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;215725010&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1005&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;789898500&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1004&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1156619111&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1003&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;610859911&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1002&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;959814483&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1001&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;684353251&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;290850651&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;999&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;675880502&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;998&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;836239751&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;997&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;487296407&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;996&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;778816128&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;995&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1013639221&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;994&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;189137575&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;993&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;172217836&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;992&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;572872008&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;991&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;865759581&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;990&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;399805736&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;989&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;394587004&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;988&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;633085719&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;987&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;15142893&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;986&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;461176831&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;985&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1078060208&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;984&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;787396508&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;983&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;877420202&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;982&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1121486845&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;981&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;146921816&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;980&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;670134387&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;979&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;574407635&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;978&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1148395437&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;977&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;748514947&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;976&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;970442995&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;975&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;280085063&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;974&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;420670822&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;973&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;20159574&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;972&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;219680665&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;971&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;401202858&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;970&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;328444623&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;969&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;623312316&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;968&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;917712264&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;967&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;588061576&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;966&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;625482841&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;965&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;220929234&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;964&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;778461001&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;963&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;498203565&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;962&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1055981771&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;961&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;70562147&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;960&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;931081750&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;959&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;93569863&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;958&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;314876311&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;957&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;932364613&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;956&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1132016772&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;955&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;371703330&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;954&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;189301560&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;953&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;739232608&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;952&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;916695967&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;951&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;399818344&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;950&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;558604923&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;949&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1092603913&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;948&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;987195616&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;947&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;665679589&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;946&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1142632478&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;945&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;198797278&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;944&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;110832477&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;943&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;775688737&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;942&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;275416086&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;941&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;435656120&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;940&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;754150483&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;939&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1024583186&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;938&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;972075461&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;937&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1071060217&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;936&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;710789980&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;935&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;691361770&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;934&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1097024307&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;933&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;862356288&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;932&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;354500195&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;931&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;158151296&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;930&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;733475281&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;929&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;215008492&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;928&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;151139272&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;927&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1000425669&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;926&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;590964357&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;925&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;373950911&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;924&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;43038800&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;923&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;338044906&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;922&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;293954870&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;921&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;393479&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;920&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;555095359&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;919&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;418829106&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;918&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;95391760&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;917&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;897658305&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;916&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1040609125&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;915&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;239948276&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;914&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1190720461&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;913&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;160498737&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;912&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;394967890&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;911&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;104302686&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;910&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;48021969&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;909&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;761000569&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;908&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;356140410&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;907&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;225246587&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;906&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;79172445&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;905&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;975365689&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;904&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1077396491&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;903&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;728717352&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;902&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;964273647&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;901&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;258781036&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;900&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;746930481&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;899&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;793742220&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;898&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;542128050&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;897&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;562413014&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;896&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;701216258&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;895&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;928704966&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;894&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;98656502&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;893&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1016152774&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;892&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;140544845&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;891&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;226416702&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;890&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;309310359&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;889&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;519065123&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;888&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;346740110&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;887&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;116615122&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;886&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;990804519&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;885&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;208648062&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;884&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;605381435&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;883&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;821163414&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;882&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;864698754&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;881&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;424773230&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;880&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1184139330&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;879&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;437390254&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;878&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;41435781&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;877&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;824197241&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;876&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1181823353&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;875&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;354135255&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;874&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;921600154&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;873&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;972782404&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;872&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;304175744&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;871&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;976950586&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;870&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;561195955&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;869&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;840601911&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;868&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;848362310&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;867&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;698380233&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;866&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;703722831&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;865&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;527081934&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;864&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;996708932&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;863&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;926257884&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;862&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;113808466&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;861&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;111022399&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;860&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;336240881&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;859&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;281602555&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;858&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;456022351&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;857&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;303940681&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;856&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1152960332&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;855&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;762827305&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;854&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1097893502&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;853&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1159492861&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;852&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;791288185&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;851&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;552596428&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;850&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1160303133&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;849&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;855459983&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;848&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;870046128&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;847&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;412042730&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;846&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;527317697&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;845&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;118258027&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;844&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1156090191&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;843&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1184418516&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;842&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;736914609&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;841&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1042440949&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;840&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1118336201&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;839&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;692314475&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;838&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;888141647&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;837&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;611975215&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;836&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;112482309&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;835&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;774541929&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;834&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;877613260&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;833&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;218484596&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;832&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;744043072&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;831&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1149426359&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;830&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1086732941&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;829&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;218727414&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;828&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;111004493&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;827&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;48035668&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;826&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1129753198&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;825&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;410088959&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;824&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1186919074&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;823&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;291266088&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;822&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;622780685&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;821&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;908030149&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;820&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;152548456&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;819&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;970996704&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;818&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;643233117&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;817&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;97648457&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;816&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;167039372&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;815&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;451159004&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;814&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;21522258&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;813&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;446568222&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;812&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;97236135&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;811&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;601480363&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;810&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;896523050&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;809&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;635312918&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;808&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;771155729&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;807&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;727217487&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;806&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1103325662&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;805&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1145702253&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;804&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;111451279&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;803&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;709647761&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;802&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;155865734&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;801&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;788861657&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;800&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;25328658&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;799&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;387592047&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;798&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;631380316&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;797&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;195654331&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;796&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;379901017&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;795&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;110746571&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;794&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;821639667&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;793&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1196705497&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;792&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;926725497&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;791&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;752090468&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;790&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;565928514&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;789&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;107924077&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;788&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1035444397&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;787&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;389590222&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;786&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;746022468&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;785&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1152494936&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;784&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1047183126&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;783&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;935173423&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;782&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;237022259&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;781&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;68211471&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;780&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;682392084&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;779&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;900610142&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;778&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;659697118&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;777&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;381789469&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;776&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;895479393&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;775&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;342674862&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;774&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1034152415&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;773&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;736863278&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;772&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;233824501&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;771&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;511543257&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;770&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;43539547&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;769&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;871109943&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;768&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;234226499&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;767&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;958639125&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;766&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;913885377&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;765&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;757234386&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;764&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;330354514&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;763&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;693659124&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;762&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;46757147&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;761&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;24910108&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;760&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;263754046&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;759&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1007999117&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;758&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;569158879&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;757&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;781185896&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;756&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;328234792&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;755&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1166796778&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;754&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1023882729&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;753&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1126014838&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;752&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;412948341&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;751&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;745762031&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;750&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;184601330&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;749&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1195686854&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;748&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;226180761&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;747&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;813440273&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;746&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;198496604&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;745&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;646284299&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;744&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;775658802&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;743&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1051631440&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;742&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;382010443&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;741&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;884529292&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;740&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1171509241&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;739&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;148470016&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;738&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;545551560&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;737&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;895321797&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;736&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;990533556&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;735&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1006826878&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;734&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;444425261&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;733&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;538658289&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;732&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1201448839&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;731&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;813543244&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;730&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;866138640&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;729&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;992484781&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;728&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;797592952&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;727&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;5350520&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;726&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1088776239&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;725&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1011384293&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;724&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;202279961&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;723&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;580990742&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;722&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;608736084&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;721&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;592191483&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;720&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;603821965&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;719&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;686032966&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;718&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;309449994&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;717&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;997796743&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;716&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;323694959&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;715&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;404631321&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;714&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;684041814&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;713&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;954922509&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;712&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;17334061&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;711&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1038027065&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;710&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;189030167&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;709&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;238786122&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;708&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;854157242&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;707&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;857322405&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;706&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;847505723&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;705&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;531600098&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;704&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;413144959&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;703&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;150862275&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;702&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;176120020&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;701&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;147651128&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;700&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;20961937&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;699&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;924892688&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;698&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;207889399&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;697&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;506289209&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;696&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;201657090&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;695&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;866897606&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;694&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;282950189&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;693&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;484625027&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;692&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;720969770&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;691&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;557487808&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;690&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;664292309&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;689&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;667236796&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;688&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;505039446&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;687&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;636507041&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;686&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;717904854&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;685&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;742491214&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;684&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;235380401&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;683&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;885103138&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;682&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;227708439&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;681&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;195450351&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;680&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;914408549&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;679&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;890140153&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;678&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;959662247&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;677&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;655663410&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;676&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;682768547&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;675&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1063757282&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;674&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;776284911&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;673&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1114588219&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;672&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;689022198&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;671&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1160585767&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;670&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;784564493&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;669&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;599804982&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;668&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;954265199&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;667&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1160092910&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;666&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1178991310&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;665&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;610146522&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;664&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;589028938&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;663&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;972903553&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;662&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;933544074&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;661&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;910101746&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;660&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1199479046&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;659&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;129564572&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;658&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;16630574&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;657&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;604268174&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;656&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;905616984&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;655&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;229755095&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;654&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;543777663&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;653&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;880642044&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;652&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;750742780&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;651&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;801027824&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;650&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;59869899&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;649&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;178293151&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;648&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;413473523&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;647&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;790966353&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;646&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;36947608&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;645&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;215402931&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;644&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;198271237&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;643&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;394503398&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;642&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;933396244&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;641&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;764498758&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;640&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;960831635&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;639&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;710558646&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;638&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;160491214&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;637&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;161213508&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;636&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;932611994&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;635&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;226519192&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;634&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;554464756&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;633&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;82595536&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;632&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1144714763&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;631&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;361090580&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;630&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;747809061&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;629&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;114293244&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;628&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;253349999&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;627&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1051279816&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;626&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1079507344&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;625&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;864605458&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;624&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1100098300&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;623&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;323233106&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;622&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1070769430&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;621&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1048471132&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;620&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;23281664&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;619&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1099148878&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;618&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;812556000&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;617&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;452606567&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;616&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;892217880&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;615&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;741556204&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;614&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;37168552&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;613&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;286980867&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;612&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1125383508&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;611&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;782814488&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;610&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1214851511&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;609&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;270577673&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;608&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;364433480&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;607&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;825553809&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;606&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;589475297&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;605&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;293114041&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;604&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1115978872&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;603&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;21831218&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;602&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;856821602&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;601&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;213782489&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;600&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;287159884&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;599&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1015101950&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;598&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;494211644&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;597&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;38143731&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;596&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;882805771&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;595&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;721674528&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;594&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;120092153&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;593&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;636819567&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;592&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;365557574&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;591&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;619653423&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;590&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1207892829&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;589&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;971282528&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;588&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;379459809&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;587&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;507124241&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;586&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1050378769&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;585&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;113715629&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;584&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;841835564&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;583&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1055649818&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;582&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;904319486&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;581&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;83232231&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;580&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;282044435&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;579&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;11563226&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;578&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;283283452&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;577&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;515932154&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;576&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;415242679&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;575&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;686396058&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;574&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;414011723&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;573&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;22692318&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;572&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;593039855&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;571&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;42054428&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;570&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;242713788&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;569&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;756543053&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;568&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;297264974&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;567&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;656668981&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;566&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;103185189&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;565&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;279211827&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;564&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;66472175&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;563&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;221289056&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;562&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;418547255&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;561&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;587378319&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;560&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;781217899&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;559&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;828907515&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;558&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1026785730&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;557&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;936576598&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;556&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;914519864&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;555&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;458326840&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;554&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;846364356&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;553&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1048948157&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;552&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;276890468&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;551&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;211463242&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;550&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;611009955&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;549&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;41350370&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;548&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1120260432&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;547&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1217213406&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;546&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1096884636&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;545&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;107298827&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;544&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;556646889&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;543&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;514714957&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;542&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;592531623&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;541&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1185635127&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;540&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;866796164&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;539&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1199009440&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;538&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;760543377&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;537&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;135043128&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;536&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1184521976&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;535&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;53368352&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;534&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;614063947&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;533&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;117184488&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;532&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1090625549&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;531&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;928160285&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;530&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1065640157&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;529&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;307397590&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;528&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;383318068&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;527&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;890835908&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;526&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;416986540&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;525&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;222852700&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;524&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;965323537&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;523&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;151764017&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;522&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;193722745&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;521&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;439803983&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;520&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;942882901&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;519&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;56286764&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;518&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;824204572&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;517&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;478793274&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;516&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;183238303&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;515&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;922253103&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;514&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;5444136&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;513&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;402856270&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;512&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;508652113&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;511&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;898341402&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;510&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;56743140&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;509&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;179078829&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;508&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;360574641&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;507&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;691533190&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;506&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;982373838&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;505&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;719429684&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;504&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;962339948&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;503&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1097706834&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;502&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;682588935&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;501&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1193566532&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;500&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1140505780&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;499&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1167874911&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;498&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;669408623&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;497&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;15348570&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;496&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;896129486&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;495&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;100671957&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;494&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1015786650&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;493&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;605094306&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;492&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;704959137&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;491&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;503877361&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;490&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;546763047&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;489&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;281625173&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;488&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;874599768&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;487&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;187483443&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;486&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;791213383&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;485&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;670376251&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;484&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;484751013&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;483&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;519454749&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;482&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;898655062&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;481&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1088862155&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;480&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;843442957&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;479&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;429341712&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;478&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;869408179&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;477&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;921648096&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;476&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;526019939&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;475&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;856290375&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;474&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;531710459&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;473&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1135323038&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;472&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;222776023&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;471&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;223826994&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;470&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;782612384&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;469&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;208579370&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;468&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;809908930&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;467&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;802818642&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;466&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1182584545&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;465&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;245518705&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;464&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;114792460&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;463&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;646248449&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;462&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;63969962&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;461&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;761908644&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;460&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;523665668&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;459&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1131060959&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;458&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;507746193&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;457&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;215968166&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;456&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;186113215&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;455&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1117740378&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;454&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;649175082&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;453&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;396834257&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;452&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;274002774&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;451&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;626055138&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;450&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;924423066&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;449&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;81357715&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;448&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1042994674&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;447&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;380053163&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;446&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;687766657&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;445&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;414805559&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;444&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1118153385&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;443&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1196507975&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;442&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;223759358&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;441&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;808836890&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;440&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;558230978&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;439&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;470920831&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;438&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;313868031&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;437&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;696317665&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;436&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;38725962&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;435&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;722983488&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;434&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;982704221&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;433&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;931470025&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;432&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;658261117&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;431&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1043739465&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;430&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;422603501&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;429&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;879856656&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;428&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;977082068&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;427&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;593021461&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;426&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;955543544&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;425&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;194004912&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;424&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1057355064&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;423&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1153279801&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;422&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1104874965&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;421&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1157109085&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;420&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;54358054&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;419&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;802241073&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;418&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;489376522&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;417&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;250441773&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;416&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;740903923&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;415&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;81493461&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;414&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;966046559&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;413&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;295086523&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;412&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1192114766&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;411&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1186654005&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;410&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;768853461&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;409&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;302013033&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;408&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1127093874&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;407&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;401944628&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;406&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;463364841&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;405&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;277324527&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;404&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;357826211&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;403&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;302642912&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;402&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;785232813&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;401&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1155455395&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;400&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;240939622&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;399&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1090741169&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;398&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;941697407&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;397&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1108935255&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;396&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;63027943&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;395&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;415750779&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;394&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;36046273&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;393&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;172429619&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;392&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;563533800&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;391&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;961503349&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;390&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;356454474&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;389&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;586712431&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;388&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;572728001&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;387&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;670855384&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;386&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;268877633&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;385&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;51139525&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;384&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;806328542&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;383&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;790061093&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;382&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;140256246&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;381&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;430118720&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;380&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;924612224&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;379&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;923573107&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;378&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1124645882&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;377&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1044890409&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;376&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;509180566&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;375&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;371227114&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;374&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;161843486&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;373&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;296514161&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;372&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;454272518&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;371&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;755779732&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;370&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;295567281&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;369&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1063635155&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;368&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;46603670&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;367&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;112353112&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;366&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;571920305&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;365&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;484055586&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;364&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;148075787&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;363&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;700140701&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;362&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;922814151&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;361&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;198283677&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;360&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;806078101&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;359&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1218701262&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;358&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;679274064&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;357&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;408382456&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;356&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;284971608&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;355&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1072737570&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;354&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;999420946&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;353&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;704897365&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;352&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1147239838&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;351&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1148707218&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;350&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;119677974&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;349&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;139766009&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;348&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;289899118&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;347&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;3099746&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;346&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;478334394&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;345&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;671867092&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;344&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1123276962&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;343&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1053910974&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;342&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;776016929&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;341&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;408840884&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;340&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;702734268&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;339&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;101137143&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;338&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;157330682&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;337&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;608473559&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;336&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;355406102&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;335&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1189624142&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;334&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;87874850&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;333&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1097033743&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;332&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;984835279&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;331&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;133446104&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;330&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;990221835&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;329&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;34152703&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;328&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;902602955&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;327&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;564227604&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;326&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;378045277&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;325&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;330935315&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;324&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;300442927&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;323&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;504016276&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;322&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;592727454&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;321&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1075766200&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;320&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;718996149&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;319&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;823573424&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;318&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;834215705&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;317&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;430497892&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;316&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;879722938&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;315&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;968236501&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;314&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;262764692&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;313&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;37503817&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;312&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;607855810&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;311&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1173289902&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;310&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;906609932&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;309&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;11948749&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;308&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;948969610&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;307&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1130417155&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;306&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;892108695&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;305&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1040897188&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;304&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;174698274&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;303&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;85414336&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;302&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;758730292&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;301&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;615781943&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;300&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1215130735&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;299&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1168693743&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;298&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1070287857&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;297&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;501559848&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;296&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;485147924&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;295&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1218893131&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;294&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;923876087&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;293&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;565056561&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;292&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;282754375&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;291&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;794028720&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;290&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;288419549&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;289&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;688387454&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;288&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;40339086&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;287&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;659115548&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;286&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;614342861&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;285&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;391568544&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;284&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;464738754&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;283&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;28669498&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;282&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1115640335&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;281&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;870635325&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;280&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;126237247&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;279&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1111165998&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;278&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;205027579&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;277&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;911218811&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;276&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;208748481&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;275&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;725176545&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;274&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;765151044&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;273&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;939495648&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;272&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;550038893&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;271&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;905707993&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;270&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;267107699&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;269&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;477779883&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;268&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;251985659&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;267&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;754082836&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;266&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;159569451&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;265&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;781616103&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;264&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1098961576&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;263&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1139687026&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;262&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;473401848&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;261&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;623689501&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;260&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1012676202&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;259&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;76777202&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;258&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;170602576&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;257&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;266093330&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;256&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;732274753&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;255&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;193219366&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;254&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;610602682&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;253&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;749761392&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;252&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;536911921&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;251&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1052883954&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;250&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1139729422&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;249&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;617278363&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;248&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;603450863&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;247&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;877968049&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;246&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1078543204&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;245&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;441578327&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;244&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;821469144&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;243&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1083268726&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;242&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;592074734&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;241&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;431251183&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;240&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1151073027&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;239&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;596034003&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;238&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;507176703&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;237&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;638155464&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;236&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;820097610&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;235&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;69713965&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;234&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;111089281&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;233&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;403306683&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;232&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;417322569&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;231&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;510992488&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;230&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;406068742&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;229&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;487323397&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;228&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1105866147&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;227&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;126043214&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;226&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;565379393&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;225&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;774566507&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;224&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;94477834&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;223&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;301787901&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;222&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;891557978&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;221&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;246179873&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;220&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;76065360&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;219&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;632831219&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;218&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;967852970&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;217&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;982932236&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;216&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;457056482&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;215&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;611696056&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;214&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;187879254&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;213&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;919970751&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;212&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;726626422&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;211&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;744906999&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;210&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;514152204&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;209&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;400846913&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;208&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1057213516&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;207&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;458393393&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;206&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;39867352&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;205&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;482474421&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;204&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1017159775&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;203&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1127386440&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;202&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;186890818&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;201&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;297371952&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;200&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;827010510&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;199&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;457757189&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;198&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;120047360&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;197&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;403406161&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;196&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;561776540&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;195&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;269984973&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;194&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1105865523&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;193&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;356682370&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;192&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;521018201&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;191&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;714326305&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;190&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;230112489&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;189&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;468954949&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;188&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;428412182&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;187&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;418097923&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;186&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;648421330&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;185&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;119412602&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;184&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1029175202&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;183&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;961854350&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;182&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;359274957&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;181&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;918516748&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;180&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;393392054&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;179&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;998769881&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;178&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;713880369&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;177&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;23918875&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;176&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;19140072&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;175&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;296443203&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;174&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1036511543&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;173&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;208417465&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;172&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;856221174&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;171&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;724608949&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;170&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1148614286&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;169&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;605394185&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;168&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1037184954&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;167&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1149508482&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;166&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;748219008&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;165&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;762595570&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;164&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;240812860&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;163&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;221590855&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;162&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;921277317&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;161&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;666749995&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;160&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;270085731&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;159&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;719780654&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;158&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1023109552&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;157&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;948736441&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;156&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;942460534&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;155&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1190076672&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;154&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;298412436&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;153&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;146236637&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;152&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;136974417&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;151&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;247369427&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;150&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1164600849&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;149&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;80725190&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;148&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;563971590&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;147&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;838975230&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;146&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;605884308&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;145&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;695738052&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;144&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;457993644&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;143&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;608089160&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;142&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;279768415&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;141&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;167776427&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;140&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;99830319&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;139&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;724761513&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;138&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;838344856&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;137&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;349705095&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;136&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;700591961&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;135&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;495192008&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;134&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;166834844&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;133&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;829383641&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;132&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;689577635&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;131&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1063098370&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;130&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1217658142&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;129&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;210005674&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;128&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;709445493&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;127&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;890260692&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;126&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;11818873&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;125&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;356866298&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;124&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;657354178&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;123&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1083325742&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;122&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;256937537&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;121&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;832141251&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;120&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;738779202&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;119&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;531375449&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;118&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;570407521&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;117&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;253499493&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;116&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;936295735&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;115&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;840539077&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;114&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1108243632&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;113&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;518037787&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;112&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;512681158&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;111&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;659791034&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;110&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;615039004&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;109&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;6475754&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;108&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;112655504&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;107&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;135513268&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;106&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;814830817&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;105&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;312451349&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;104&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;459204360&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;103&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;536270797&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;102&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;487599107&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;101&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;995873996&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;947176358&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;99&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;161110841&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;98&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1215850742&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;97&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;828031021&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;96&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;393857015&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;95&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;483165571&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;94&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1169422374&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;93&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;185485308&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;92&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1113820447&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;91&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1217012548&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;90&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;591690262&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;89&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;230984245&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;88&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1183186281&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;87&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;984746087&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;86&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;321334226&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;85&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;356396152&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;84&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;812358214&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;83&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;652862462&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;82&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1159946831&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;81&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1185692555&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;80&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1101691161&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;79&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1162783803&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;78&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;592033894&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;77&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;545367197&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;76&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;441688164&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;75&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;169491076&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;74&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;181297517&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;73&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;590332818&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;72&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;814337101&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;71&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1148316386&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;70&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;700258144&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;69&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;719201877&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;68&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1160695934&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;67&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1186868159&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;66&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;508542038&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;65&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1113702100&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;64&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;921032142&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;63&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;758636144&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;62&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;890540800&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;61&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;136808203&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;60&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;74886413&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;59&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;156077420&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;58&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;925473910&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;57&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;111404286&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;56&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;355116767&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;55&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;468038980&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;54&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;89708844&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;53&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;878616521&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;52&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1154657871&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;51&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;677831135&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;903468800&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;49&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;890557208&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;48&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1035114476&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;47&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;198189399&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;46&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;864375452&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;45&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1164916963&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;44&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;929627324&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;43&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;418711325&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;42&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;97430691&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;41&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1172413774&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;760600756&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;39&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;943281805&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;38&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;53033182&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;37&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;123566782&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;36&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;665472336&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;35&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;521103310&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;34&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;892876972&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;33&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;169828417&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;315862403&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;31&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;973295601&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;30&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1036868940&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;29&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;469235131&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;28&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1097609240&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;27&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;446027303&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;356219098&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;480790123&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;94742566&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;23&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;691728720&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;922852954&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;21&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;21648854&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;903452116&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;19&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1043050543&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;18&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;867501915&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;17&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;402312961&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;772349320&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;806410607&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;14&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;573402289&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;13&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;103888540&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;147927873&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;11&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1005161156&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;988774771&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;682875980&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;54946232&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;717143945&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;323577100&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;803064428&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;598462622&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1110253556&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;764371182&lt;/span&gt;*x + &lt;span class=&#34;number&#34;&gt;634648371&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;number&#34;&gt;735531500&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1023&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;684755229&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1022&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;978579144&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1021&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;560225565&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1020&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;758090578&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1019&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;367477932&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1018&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;326779415&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1017&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;26800946&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1016&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;199017905&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1015&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1156874439&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1014&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;673969262&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1013&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;617169647&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1012&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;462256026&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1011&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;303059784&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1010&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;663728970&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1009&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;376865711&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1008&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;830705685&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1007&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;573964358&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1006&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1210202059&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1005&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;269197755&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1004&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;586236496&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1003&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;621987820&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1002&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;485567868&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1001&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;305700227&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1052698462&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;999&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;86861550&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;998&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;44767901&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;997&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;410897986&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;996&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;212344404&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;995&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;336381747&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;994&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;398182335&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;993&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;660275371&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;992&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;52728322&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;991&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1193103469&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;990&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;684295535&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;989&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1029981794&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;988&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1051866415&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;987&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;418681909&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;986&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;976794520&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;985&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1180496804&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;984&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;438513041&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;983&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;822843942&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;982&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1119264881&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;981&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;790873853&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;980&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1146506838&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;979&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;27016797&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;978&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1149126201&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;977&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;967895459&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;976&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1201841165&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;975&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;264216641&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;974&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;751855165&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;973&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;277480010&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;972&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;955969328&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;971&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;784721168&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;970&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;696371212&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;969&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;401164998&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;968&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;654719011&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;967&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;785183205&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;966&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;79070435&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;965&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1140562925&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;964&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1025154340&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;963&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1044315421&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;962&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;392734282&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;961&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;234286141&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;960&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;962551866&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;959&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;133742245&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;958&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;998056106&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;957&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;781318236&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;956&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;23528574&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;955&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1214036424&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;954&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;296666931&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;953&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1211729921&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;952&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;561550286&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;951&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;634392845&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;950&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;422332555&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;949&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;765556851&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;948&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1151849524&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;947&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;305981530&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;946&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;246290056&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;945&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;24304550&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;944&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;477073522&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;943&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;416104453&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;942&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;898162013&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;941&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;611609496&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;940&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;445765799&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;939&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;430180169&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;938&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1151421310&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;937&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;439515367&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;936&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;795257572&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;935&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;578106992&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;934&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;929259980&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;933&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;550407102&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;932&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1219047347&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;931&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;15972593&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;930&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;515513177&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;929&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;679675449&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;928&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;914537835&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;927&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;156230965&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;926&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;385558312&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;925&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1036365654&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;924&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1098274877&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;923&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;348628203&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;922&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1093802915&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;921&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1162728002&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;920&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;200502246&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;919&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;551049082&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;918&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;969116717&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;917&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1127382445&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;916&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;968172543&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;915&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;346881523&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;914&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;41744706&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;913&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;335042561&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;912&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;593895276&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;911&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;15888292&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;910&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;324866127&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;909&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;937351605&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;908&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;347255852&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;907&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1120419679&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;906&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;249832197&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;905&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;896923860&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;904&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;129801128&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;903&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;207849052&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;902&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;386825059&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;901&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;823406098&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;900&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;977635408&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;899&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;108813100&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;898&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;561865827&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;897&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;718000532&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;896&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;48090035&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;895&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;832337939&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;894&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1084389292&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;893&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;793335438&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;892&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1095245016&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;891&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1080787282&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;890&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;122666287&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;889&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;937313249&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;888&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;62818846&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;887&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1170462486&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;886&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;182439366&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;885&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;792906343&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;884&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1205386767&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;883&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;310389549&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;882&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;603676058&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;881&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;671251954&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;880&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;640345010&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;879&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1087374504&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;878&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;119769446&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;877&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;135989573&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;876&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;880703983&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;875&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;613578242&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;874&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1207874966&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;873&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;972002390&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;872&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;644470053&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;871&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;335762119&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;870&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1079917808&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;869&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1023711373&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;868&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;861485470&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;867&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;230979333&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;866&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;683284149&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;865&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;645804102&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;864&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;577971621&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;863&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;33779989&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;862&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;915467237&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;861&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;834966216&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;860&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;445758874&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;859&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;685228217&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;858&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;979609284&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;857&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;842509205&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;856&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;221373358&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;855&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;150166201&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;854&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;927937340&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;853&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;995054125&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;852&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;704623324&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;851&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1112892592&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;850&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;782816865&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;849&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;878518510&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;848&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;391872241&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;847&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;30062686&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;846&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;108900016&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;845&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1034780269&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;844&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1190084541&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;843&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;441686497&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;842&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;117953957&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;841&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;840802549&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;840&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;903238790&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;839&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;551715093&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;838&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;539420097&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;837&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1007110444&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;836&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;673864283&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;835&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;756402005&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;834&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;197892310&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;833&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;981720851&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;832&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;798897509&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;831&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1127242378&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;830&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;666754217&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;829&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;685248618&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;828&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;327773092&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;827&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;390697118&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;826&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;912223373&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;825&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;482947333&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;824&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1110169857&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;823&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;780612147&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;822&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;194698743&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;821&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;716386043&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;820&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;424946693&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;819&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;22701975&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;818&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;293011366&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;817&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;947695756&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;816&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1188483932&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;815&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1002073886&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;814&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1078210750&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;813&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1127684166&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;812&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;719332394&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;811&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1072532713&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;810&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;550629553&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;809&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;188195613&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;808&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;614412704&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;807&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;649960359&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;806&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1010011298&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;805&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;824975518&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;804&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;311757403&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;803&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;93674481&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;802&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;380323800&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;801&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1086623904&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;800&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;240170088&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;799&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;956396081&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;798&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;939969890&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;797&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;131843464&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;796&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1045744996&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;795&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;424359277&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;794&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;550616456&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;793&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1061637035&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;792&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;444548551&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;791&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;677546521&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;790&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;149605032&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;789&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;829567560&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;788&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;516053142&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;787&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1191529914&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;786&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;294270928&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;785&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;142024389&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;784&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;584911191&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;783&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;307856659&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;782&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;81514660&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;781&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;543784156&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;780&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;108008163&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;779&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;13154295&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;778&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;155266054&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;777&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;663702892&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;776&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;782494602&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;775&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;747547833&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;774&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;242456376&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;773&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;669844220&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;772&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;552894098&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;771&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1036366706&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;770&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1074841665&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;769&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;720745418&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;768&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1137936670&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;767&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;840875363&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;766&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;476498840&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;765&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1088669461&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;764&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1249649&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;763&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;882277578&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;762&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;37842126&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;761&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;398977801&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;760&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;328296234&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;759&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;536342859&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;758&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;608139240&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;757&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;897424944&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;756&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;76562916&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;755&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;428081420&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;754&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;627420927&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;753&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;265131678&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;752&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1034443577&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;751&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;177902661&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;750&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;490977141&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;749&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1084536775&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;748&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1189221123&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;747&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;854191429&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;746&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;952038058&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;745&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;891288300&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;744&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;929356576&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;743&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;223874272&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;742&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;220297702&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;741&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1099283305&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;740&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1008574448&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;739&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;619949004&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;738&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;747199791&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;737&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;760703880&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;736&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;7682727&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;735&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;88566484&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;734&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;733742620&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;733&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;381443925&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;732&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;799269923&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;731&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;233342676&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;730&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1205696983&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;729&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;765306727&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;728&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;29342855&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;727&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;287728251&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;726&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;214358216&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;725&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;355991367&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;724&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;344973841&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;723&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;436344093&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;722&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;547944829&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;721&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1041405031&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;720&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;368771692&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;719&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;37426577&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;718&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;502936636&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;717&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;732825913&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;716&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;518778589&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;715&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;561797784&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;714&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;773068766&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;713&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;75615306&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;712&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;668933267&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;711&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;628975723&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;710&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1140697439&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;709&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;108807342&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;708&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;283945737&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;707&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;701674528&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;706&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1120373548&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;705&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;421627231&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;704&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;260846853&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;703&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;292537012&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;702&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;583513440&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;701&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;609720259&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;700&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;831373721&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;699&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1126099385&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;698&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;431095431&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;697&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;296863241&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;696&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;371013827&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;695&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;549980853&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;694&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;550174635&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;693&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;620963563&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;692&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;952040422&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;691&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1150044500&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;690&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;893175261&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;689&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1139857784&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;688&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;972717568&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;687&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;735672517&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;686&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1177501026&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;685&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;765934764&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;684&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;710762091&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;683&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;871268519&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;682&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;969318271&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;681&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;286261161&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;680&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;65128931&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;679&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1100922672&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;678&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;47619662&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;677&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;981578224&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;676&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;67232154&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;675&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1928142&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;674&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;817643007&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;673&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;675713298&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;672&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;185236805&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;671&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;331446457&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;670&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;129023118&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;669&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;431426370&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;668&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1154277684&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;667&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;723182950&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;666&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1144823093&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;665&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;822001162&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;664&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;356099532&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;663&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;705989193&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;662&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;878712048&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;661&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1095044481&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;660&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;332193401&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;659&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;613329359&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;658&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;673744151&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;657&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;808080280&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;656&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;225562949&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;655&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;185686220&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;654&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;742469973&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;653&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;986152315&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;652&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;13611550&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;651&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;535747170&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;650&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;233786507&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;649&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;27955348&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;648&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1004446959&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;647&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1071164149&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;646&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;265258708&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;645&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;63221383&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;644&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;682228580&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;643&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;867131152&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;642&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;997600620&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;641&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;993922001&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;640&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;693252545&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;639&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;865655581&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;638&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;518295141&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;637&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;902072633&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;636&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;704953646&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;635&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;587251157&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;634&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;99168972&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;633&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1105480730&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;632&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1040404159&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;631&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;436113220&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;630&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;152714904&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;629&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;697469981&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;628&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1185372838&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;627&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;216027999&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;626&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;616083931&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;625&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;399419685&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;624&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;23193568&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;623&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1174129641&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;622&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;75724376&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;621&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;570399858&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;620&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;754947446&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;619&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1037864447&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;618&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;794730343&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;617&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;60369472&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;616&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;750769016&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;615&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;61444481&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;614&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;333194445&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;613&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1109236037&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;612&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;513379869&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;611&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;706807998&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;610&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;999669914&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;609&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1198194959&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;608&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;336044172&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;607&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;402719207&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;606&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1050007981&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;605&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;429464593&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;604&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;679293134&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;603&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;734513317&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;602&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;838385265&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;601&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;990800608&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;600&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1162093896&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;599&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;173467508&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;598&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;123947890&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;597&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;325712596&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;596&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1049522320&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;595&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1072653958&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;594&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;565759817&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;593&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;549918485&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;592&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;574268523&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;591&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1052593520&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;590&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;474323970&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;589&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;262787725&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;588&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1091470590&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;587&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;782664905&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;586&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1201833996&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;585&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;808712564&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;584&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;619522329&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;583&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;233329446&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;582&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;730502283&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;581&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1017501853&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;580&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;306080194&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;579&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;283641594&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;578&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;195324593&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;577&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1116741123&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;576&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;289439631&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;575&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;206064600&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;574&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;280021778&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;573&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;425409216&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;572&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1107952582&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;571&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;131800177&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;570&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;106903346&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;569&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;72306234&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;568&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;934072451&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;567&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;242740893&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;566&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;106611451&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;565&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;429378634&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;564&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;127624569&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;563&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;587315789&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;562&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;932709753&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;561&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;523886142&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;560&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;110330665&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;559&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;963244036&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;558&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;227339325&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;557&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;185882207&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;556&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;987833442&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;555&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;981380006&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;554&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1140813804&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;553&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;538704418&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;552&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;842520362&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;551&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;597627400&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;550&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;165232274&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;549&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;900076209&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;548&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;311342603&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;547&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;477271753&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;546&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1072907066&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;545&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1066126181&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;544&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;791702251&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;543&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;623246063&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;542&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1082681410&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;541&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;759396967&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;540&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;878108937&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;539&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;724607060&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;538&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;79223685&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;537&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;307312027&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;536&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;234246571&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;535&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;330319932&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;534&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;274254378&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;533&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1082820468&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;532&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;68920838&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;531&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1195376541&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;530&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;170971307&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;529&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;399525324&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;528&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;238798853&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;527&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;664426862&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;526&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;269949285&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;525&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;698202786&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;524&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;88964561&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;523&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;635539315&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;522&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1016514687&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;521&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;122364467&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;520&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1095096646&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;519&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;513834099&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;518&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;672478524&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;517&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;47526709&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;516&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;48782616&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;515&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;166225959&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;514&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;810099682&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;513&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;168540411&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;512&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;30055377&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;511&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;817325819&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;510&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;202717189&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;509&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;739906349&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;508&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;186072589&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;507&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;451966755&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;506&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;684027658&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;505&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;251331059&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;504&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;591972494&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;503&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;289197098&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;502&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;829928406&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;501&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;160528626&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;500&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;90951219&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;499&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;496118642&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;498&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;117818178&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;497&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;215417436&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;496&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;937904122&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;495&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;962080493&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;494&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;423647737&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;493&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1094089608&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;492&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;97559711&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;491&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;412409151&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;490&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1039695658&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;489&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;461079746&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;488&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;564664118&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;487&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;2231630&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;486&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;667569567&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;485&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;471400483&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;484&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;691739455&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;483&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;146641223&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;482&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;445509678&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;481&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;788647561&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;480&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;100316571&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;479&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;927803124&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;478&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;225739054&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;477&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;339283562&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;476&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;741552554&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;475&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;674303545&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;474&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;610706793&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;473&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1045437706&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;472&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;758427998&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;471&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;518677374&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;470&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1020530386&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;469&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;81672436&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;468&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;684553666&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;467&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;36416557&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;466&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1083076029&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;465&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;63903696&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;464&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;655765095&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;463&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;464055997&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;462&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;874368360&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;461&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;909538282&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;460&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1084815716&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;459&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;971305398&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;458&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;504958756&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;457&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;941782746&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;456&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;410981017&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;455&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;44463213&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;454&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;57796260&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;453&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;633624768&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;452&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;902476625&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;451&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1190884714&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;450&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;30960289&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;449&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;698111360&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;448&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;507015564&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;447&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;595305556&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;446&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1170147546&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;445&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;595449153&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;444&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1132050715&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;443&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;566093951&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;442&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1125890381&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;441&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;864044563&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;440&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;608408253&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;439&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;128031905&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;438&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;951152598&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;437&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;41054884&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;436&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1012755213&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;435&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1091670374&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;434&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;481898210&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;433&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1007980179&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;432&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;43301236&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;431&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;6478999&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;430&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1175215424&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;429&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;597862715&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;428&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;441537430&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;427&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;339705054&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;426&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;289227345&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;425&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;795113772&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;424&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;404870950&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;423&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;997272819&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;422&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;634256255&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;421&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;453060086&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;420&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;821493547&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;419&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;842289852&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;418&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;223251279&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;417&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;929721613&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;416&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;63980045&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;415&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;298369623&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;414&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1026287144&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;413&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;979092254&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;412&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1182904024&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;411&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;298048453&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;410&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;653297794&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;409&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;365769179&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;408&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;45373617&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;407&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;7228243&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;406&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1086374067&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;405&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;389455721&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;404&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;992518297&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;403&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;433929335&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;402&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1149626197&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;401&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;90006250&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;400&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1011632630&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;399&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;940906615&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;398&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;564772117&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;397&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;692974220&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;396&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;561321375&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;395&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1095715303&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;394&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1006114558&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;393&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;95516055&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;392&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;640816811&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;391&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;869737844&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;390&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;248741996&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;389&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;101754352&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;388&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;253268107&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;387&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;593472036&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;386&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;627778298&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;385&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;801877646&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;384&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;286581226&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;383&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;645931883&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;382&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;373119745&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;381&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;461109006&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;380&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;594214135&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;379&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;751634451&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;378&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;706229440&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;377&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;247985412&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;376&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;993987710&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;375&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;618989435&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;374&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;600506682&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;373&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;179955505&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;372&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;956234357&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;371&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1049030902&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;370&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;727597507&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;369&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1196607714&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;368&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;610634244&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;367&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;619865634&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;366&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;849131167&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;365&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1094185730&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;364&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;685353152&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;363&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;299082549&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;362&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1076769237&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;361&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;792938001&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;360&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;885082721&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;359&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1198739364&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;358&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;273154602&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;357&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;597517874&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;356&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;351418158&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;355&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;621945565&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;354&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;949756104&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;353&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1020290901&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;352&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;315372660&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;351&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;291246927&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;350&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1016861207&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;349&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;171467993&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;348&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1074074496&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;347&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;660775696&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;346&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;562891589&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;345&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;258618000&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;344&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;521058831&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;343&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;152819838&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;342&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1141330990&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;341&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;383408903&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;340&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;677850803&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;339&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;165908062&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;338&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;66975904&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;337&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;510786934&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;336&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;32306220&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;335&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;708115806&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;334&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;474352780&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;333&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;963188335&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;332&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;151844162&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;331&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;907339624&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;330&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;456166118&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;329&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;111742252&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;328&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;318018829&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;327&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;624012970&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;326&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;255354390&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;325&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1218329311&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;324&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;375000855&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;323&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;54956044&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;322&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;13543809&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;321&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;671163260&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;320&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;226676913&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;319&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1193470867&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;318&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;477161216&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;317&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;519506783&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;316&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;748987057&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;315&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;768531367&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;314&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;327816599&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;313&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;59056092&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;312&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;520958252&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;311&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;243337260&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;310&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;608632530&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;309&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;65258636&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;308&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1012579720&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;307&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;400176357&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;306&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;104583966&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;305&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1114827176&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;304&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;70705682&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;303&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;5320656&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;302&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1207465008&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;301&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1211372826&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;300&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;886104873&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;299&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;747144635&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;298&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;227753814&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;297&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;427912588&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;296&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;425232985&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;295&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;135219277&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;294&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;541439233&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;293&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;82586191&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;292&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1024575564&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;291&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;408418547&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;290&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1076407665&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;289&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;184646604&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;288&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;894569780&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;287&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;730742386&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;286&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;473643018&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;285&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;561906151&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;284&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;582231889&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;283&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;928617667&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;282&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;460594931&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;281&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;946340582&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;280&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;881007408&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;279&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;655553538&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;278&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;107738502&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;277&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;958107338&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;276&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;874269820&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;275&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;689734430&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;274&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1025286771&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;273&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;809509338&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;272&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;126580761&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;271&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;425724981&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;270&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;91398446&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;269&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;915486182&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;268&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;750598785&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;267&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;331692120&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;266&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;266239686&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;265&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;41813860&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;264&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1003196915&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;263&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1006275694&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;262&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;958171508&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;261&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;387655573&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;260&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;529686749&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;259&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;2533683&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;258&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;851532040&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;257&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;515865631&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;256&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;331149910&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;255&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1058283457&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;254&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;478391568&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;253&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1020601120&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;252&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;193954604&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;251&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;125558467&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;250&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;916367669&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;249&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;965664721&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;248&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;737411958&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;247&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;145954639&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;246&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;787702411&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;245&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;256023548&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;244&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;831752864&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;243&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;637799028&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;242&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;202325459&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;241&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;189858829&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;240&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;221236168&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;239&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;276967229&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;238&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;732958371&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;237&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;31622618&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;236&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;558911372&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;235&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;257580689&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;234&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;490167674&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;233&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1164269554&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;232&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;765931664&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;231&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;89716985&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;230&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;639008878&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;229&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;716033538&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;228&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;186948569&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;227&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;870251868&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;226&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;383121640&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;225&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;604362204&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;224&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;405526662&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;223&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;127371887&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;222&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;543669202&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;221&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;823112915&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;220&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;523517382&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;219&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;791437322&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;218&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1069279817&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;217&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;960628355&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;216&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1012582276&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;215&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1200088601&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;214&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;927011022&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;213&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;830570829&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;212&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;700668365&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;211&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1205573850&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;210&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;276778781&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;209&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;786305215&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;208&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;928215922&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;207&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;154393796&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;206&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;169298902&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;205&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;177646296&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;204&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;173339370&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;203&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;287217637&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;202&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1077403939&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;201&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1004965535&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;200&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;677352462&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;199&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;545192340&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;198&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;464170452&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;197&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;381853900&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;196&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;205643848&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;195&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;973330672&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;194&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1148733662&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;193&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;458436519&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;192&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;68604889&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;191&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;193530886&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;190&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;141661386&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;189&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1117183144&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;188&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;153035244&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;187&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;830892599&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;186&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;795500906&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;185&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;67041425&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;184&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;617209634&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;183&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;180547177&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;182&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1183445159&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;181&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;303603618&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;180&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;842724764&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;179&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;784982658&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;178&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1199356684&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;177&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;321497016&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;176&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;513738925&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;175&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;465949450&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;174&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;981246204&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;173&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;814398377&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;172&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;950247970&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;171&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;720838080&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;170&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;399493165&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;169&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;735365971&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;168&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;109745845&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;167&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;897998838&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;166&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;547497972&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;165&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;174675208&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;164&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;716115074&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;163&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;237209800&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;162&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;186394653&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;161&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;876995839&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;160&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1187252196&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;159&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;819282320&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;158&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;44596523&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;157&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;679033559&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;156&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;736746236&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;155&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1184916922&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;154&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;451294643&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;153&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;443590366&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;152&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;304384335&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;151&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1064695584&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;150&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;602535518&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;149&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;684486124&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;148&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;863476315&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;147&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;496170722&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;146&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;737062216&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;145&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;285799611&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;144&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1085153158&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;143&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;247783563&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;142&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1208043659&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;141&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;208776666&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;140&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;117730360&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;139&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;279620264&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;138&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;273045622&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;137&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;893971194&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;136&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;240743423&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;135&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1143029271&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;134&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;326725356&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;133&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;294174585&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;132&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;672819095&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;131&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;138843366&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;130&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1176670148&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;129&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;573825049&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;128&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;835249905&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;127&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;778468469&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;126&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;300257393&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;125&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;409352854&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;124&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;953527813&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;123&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;653640743&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;122&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1210615840&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;121&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;596684403&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;120&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;46012813&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;119&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;510765516&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;118&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1213476223&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;117&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1132779740&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;116&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;769195645&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;115&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;963749389&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;114&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;843804183&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;113&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;109759209&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;112&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;493130294&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;111&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1122857844&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;110&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1130618881&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;109&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;648465049&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;108&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;364595574&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;107&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;410134064&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;106&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;597836905&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;105&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;831243271&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;104&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;226275998&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;103&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;686704033&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;102&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;662011231&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;101&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;112226051&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;623946037&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;99&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;469742204&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;98&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;369854172&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;97&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;731154062&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;96&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;352916654&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;95&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;45991298&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;94&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;614913911&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;93&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;632337602&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;92&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;327529986&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;91&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;111251878&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;90&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;657089210&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;89&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;499853920&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;88&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;966818975&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;87&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;454584975&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;86&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;116582431&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;85&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;619242494&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;84&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;455382561&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;83&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;246350547&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;82&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;495191129&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;81&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;900852972&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;80&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;264825752&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;79&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;426813960&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;78&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;478124215&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;77&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1080567657&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;76&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;858353771&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;75&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;215115660&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;74&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;963682245&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;73&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;964445096&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;72&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;73603206&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;71&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;734630202&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;70&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;199652522&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;69&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;520021635&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;68&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;763256200&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;67&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;861482624&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;66&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;890485659&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;65&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;523362913&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;64&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;785087110&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;63&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;381314881&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;62&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;843850504&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;61&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;61951613&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;60&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;119100925&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;59&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;531827488&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;58&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;199818669&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;57&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;592207491&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;56&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;354682041&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;55&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1015447358&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;54&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;328324806&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;53&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;24880841&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;52&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;516663598&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;51&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;716706066&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1042483154&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;49&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;331433641&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;48&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;929901382&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;47&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;502140671&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;46&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;48123362&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;45&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1112586174&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;44&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;14618102&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;43&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;764832169&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;42&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;446768463&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;41&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;920421919&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;491851586&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;39&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;24718814&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;38&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;83091454&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;37&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;155770396&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;36&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;12824441&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;35&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;954371888&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;34&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;318592841&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;33&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;788251579&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;246435934&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;31&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;387083299&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;30&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;395226231&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;29&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;646811732&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;28&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1131418388&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;27&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1135116504&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;986902782&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;323457413&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;521885110&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;23&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;234655676&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;965166497&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;21&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;755967054&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;574743395&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;19&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1175664410&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;18&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;117322371&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;17&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;794664856&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;570463&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1148572518&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;14&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;439320220&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;13&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;815953366&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;389050726&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;11&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1167287391&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;397052468&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;275572458&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;548665509&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1202175986&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;518662014&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1084425257&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;7854568&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;274607457&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;162444786&lt;/span&gt;*x + &lt;span class=&#34;number&#34;&gt;410560230&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ps = [x - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,x + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,x^&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,x^&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,x^&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,x^&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,x^&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,x^&lt;span class=&#34;number&#34;&gt;64&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;flatter&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;M&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# compile https://github.com/keeganryan/flatter and put it in $PATH&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    z = &lt;span class=&#34;string&#34;&gt;&amp;quot;[[&amp;quot;&lt;/span&gt; + &lt;span class=&#34;string&#34;&gt;&amp;quot;]\n[&amp;quot;&lt;/span&gt;.join(&lt;span class=&#34;string&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;.join(&lt;span class=&#34;built_in&#34;&gt;map&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;, row)) &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; row &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; M) + &lt;span class=&#34;string&#34;&gt;&amp;quot;]]&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ret = check_output([&lt;span class=&#34;string&#34;&gt;&amp;quot;flatter&amp;quot;&lt;/span&gt;], &lt;span class=&#34;built_in&#34;&gt;input&lt;/span&gt;=z.encode())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; matrix(M.nrows(), M.ncols(), &lt;span class=&#34;built_in&#34;&gt;map&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;, findall(&lt;span class=&#34;string&#34;&gt;b&amp;quot;-?\\d+&amp;quot;&lt;/span&gt;, ret)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;solve&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;poly, a, b, slen=&lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# solve for a*s+e=b (mod poly)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# where s and e are small&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# and len(s) = slen&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; mat, mat2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    n = poly.degree()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; slen &lt;span class=&#34;keyword&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        slen = n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;f&amp;quot;Try solving with deg(poly) = &lt;span class=&#34;subst&#34;&gt;&amp;#123;n&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    t0 = time()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    main_block = matrix([vector(a * x**i % poly) &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(n)])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    approx = &lt;span class=&#34;number&#34;&gt;512&lt;/span&gt; // n  &lt;span class=&#34;comment&#34;&gt;# approximation for the average of target vector&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mat = block_matrix(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ZZ,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            [&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, -main_block, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            [&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, q, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;# kannan embedding&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                matrix(vector(b % poly)),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                matrix([[approx]]),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            ],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mat[:, slen:n] *= q  &lt;span class=&#34;comment&#34;&gt;# force zero&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;f&amp;quot;Lattice size = &lt;span class=&#34;subst&#34;&gt;&amp;#123;mat.dimensions()&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mat2 = flatter(mat)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;f&amp;quot;&lt;span class=&#34;subst&#34;&gt;&amp;#123;mat.nrows()&amp;#125;&lt;/span&gt;x&lt;span class=&#34;subst&#34;&gt;&amp;#123;mat.ncols()&amp;#125;&lt;/span&gt; lattice reduced in &lt;span class=&#34;subst&#34;&gt;&amp;#123;time()-t0&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ret &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; mat2:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ret[-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            ret = -ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ret[-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] == approx:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(ret)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; F(&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;(ret[:n]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rs = [solve(p, a, b) &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; p &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; ps]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;L = lcm(ps[:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;])  &lt;span class=&#34;comment&#34;&gt;# deg(L) = 256&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s_mod_L = crt(rs, ps)  &lt;span class=&#34;comment&#34;&gt;# this is s (mod L)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e_mod_L = (b - a * s_mod_L) % L&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;---------------&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(s_mod_L)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(e_mod_L)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q = &lt;span class=&#34;number&#34;&gt;1219077173&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;P.&amp;lt;x&amp;gt; = PolynomialRing(Zmod(q))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;A = &lt;span class=&#34;number&#34;&gt;114&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;63&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;49&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;62&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;104&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;61&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;56&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;60&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;84&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;59&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;49&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;58&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;60&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;57&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;37&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;56&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;36&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;55&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;55&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;54&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;106&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;53&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;52&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;111&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;51&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;61&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;111&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;49&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;68&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;48&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;111&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;47&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;125&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;46&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;81&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;45&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;68&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;44&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;35&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;43&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;53&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;42&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;94&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;41&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;62&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;74&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;39&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;60&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;38&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;33&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;37&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;111&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;36&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;67&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;35&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;34&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;75&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;33&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;65&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;33&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;31&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;121&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;30&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;108&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;29&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;111&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;28&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;80&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;27&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;95&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;99&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;49&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;109&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;23&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;111&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;116&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;21&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;79&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;108&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;19&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;99&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;18&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;121&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;17&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;67&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;95&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;119&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;14&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;48&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;13&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;110&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;75&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;11&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;95&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;89&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;49&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;49&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;52&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;82&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;95&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;117&lt;/span&gt;*x^&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;48&lt;/span&gt;*x + &lt;span class=&#34;number&#34;&gt;89&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;AA = A.coefficient()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(AA)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    flag += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(AA[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://n0b8wz8yo3e.feishu.cn/space/api/box/stream/download/asynccode/?code=OGQwMDU4YWZlYjM2YzllYTZkYWY0MmE2ODU3M2RmY2ZfNTZZemdSa1lnYnBLWHlmYWkxSVVpcXZDbDV4YUJ0d3JfVG9rZW46Wkw3VWJkYjZDb3VtSDV4cmxrZGNvVXFWbkliXzE3MDcyMDY1MjE6MTcwNzIxMDEyMV9WNA&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://n0b8wz8yo3e.feishu.cn/space/api/box/stream/download/asynccode/?code=OGYzNDVlNzUwNTZiMTM1ZTJiNzEyYjliMjJlOTgyOTZfbUZmY0N5V0kwbWpWa0V6SDUwWGVHVGZyOGdqNHdkVHBfVG9rZW46Sjk0a2J1V0dkb3U3cWF4WDVEYWN5RDA0blBlXzE3MDcyMDY1MjE6MTcwNzIxMDEyMV9WNA&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;can_you_guess_me&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#can_you_guess_me&#34;&gt;#&lt;/a&gt; &lt;strong&gt;can_you_guess_me&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;造格解决，求出 t，转换为 hnp 问题。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n = &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;T = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;**&lt;span class=&#34;number&#34;&gt;48&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;E = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;**&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q = &lt;span class=&#34;number&#34;&gt;313199526393254794805899275326380083313&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = [&lt;span class=&#34;number&#34;&gt;258948702106389340127909287396807150259&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;130878573261697415793888397911168583971&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;287085364108707601156242002650192970665&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;172240654236516299340495055728541554805&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;206056586779420225992168537876290239524&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m = matrix(ZZ,&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    m[i,-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = a[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    m[i,i] = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m[-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;M = m.LLL()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;T_ = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    T_1 = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        T_1.append(M[i,j])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    T_.append(T_1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# print(T_)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;result1=matrix(ZZ,T_[:-&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]).right_kernel()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;t = result1.basis()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# print(t)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;t = [&lt;span class=&#34;number&#34;&gt;70461467654746&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;7976473815457&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;179142956465832&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;176554799971356&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;145182873667321&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bound = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; ^ &lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;HNP = matrix(QQ,&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HNP[i,i] = q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HNP[-&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,i] = t[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HNP[-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,i] = -a[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;HNP[-&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,-&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] = bound/q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;HNP[-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = bound&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m_final = HNP.LLL()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# print(m_final)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; line &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; m_final:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(line[-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] == bound):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(line)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# for i in range(7):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#     print(int(m_final[i,-2]*q)//2^128 % q)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# print(m_final*HNP^(-1))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = [&lt;span class=&#34;number&#34;&gt;258948702106389340127909287396807150259&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;130878573261697415793888397911168583971&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;287085364108707601156242002650192970665&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;172240654236516299340495055728541554805&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;206056586779420225992168537876290239524&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;t = [&lt;span class=&#34;number&#34;&gt;70461467654746&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;7976473815457&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;179142956465832&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;176554799971356&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;145182873667321&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e = [&lt;span class=&#34;number&#34;&gt;1207385170&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2227664800&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;194948058&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2380502097&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;893798212&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;61832802753575197703139019131565944821482782720&lt;/span&gt;/&lt;span class=&#34;number&#34;&gt;313199526393254794805899275326380083313&lt;/span&gt; * q /bound)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(flag))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;assert&lt;/span&gt;((t[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] * flag - e[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;])%q == a[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://n0b8wz8yo3e.feishu.cn/space/api/box/stream/download/asynccode/?code=NjI5YWIxZjY0YWJhNzMwZmRiY2ExMmM1OWMwNGUwNGVfM01yVFFCdTFxd0JXYVZBcG5sU0pYMUxRT1dDY2V4ZkdfVG9rZW46Q09aRGJWSlM5b24xNXp4WmVJdWNoOExHbkpBXzE3MDcyMDY1MjE6MTcwNzIxMDEyMV9WNA&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://justgo00.github.io/2024/01/13/HNP/</guid>
            <title>HNP问题</title>
            <link>https://justgo00.github.io/2024/01/13/HNP/</link>
            <pubDate>Sat, 13 Jan 2024 12:33:59 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;格密码是一类备受关注的抗量子计算攻击的公钥密码体制。而格理论也使许多现代公钥密码 RSA、DSA 等体系受到影响。这篇文章主要从两道 CTF 题目来学习格密码中的 HNP (Hidden number problem）。&lt;/p&gt;
&lt;h2 id=&#34;lattice&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#lattice&#34;&gt;#&lt;/a&gt; Lattice&lt;/h2&gt;
&lt;p&gt;首先谈谈个人对 Lattice 的理解叭。个人觉得，Latiice 就是由若干线性无关的向量组成的一个向量空间，在这个空间中，向量彼此之间可以进行相应的加、减运算。向量也可以乘以某个系数，但这个系数仅限于整数，因而形成了布满整个空间的格点。在格中的计算问题主要包括两种，即 SVP (the Shortest Vector Problem of lattice) 和 CVP (the Closest Vector  Problem)，然后个人认为，CVP 可以给 Latiice 加上一个维度后变成 SVP，继而可以用 LLL 算法来进行规约从而找到最短向量。&lt;/p&gt;
&lt;h2 id=&#34;xctf2020-高校战役-nhp&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xctf2020-高校战役-nhp&#34;&gt;#&lt;/a&gt; XCTF2020 - 高校战役 - NHP&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tZWdhLm56L2ZpbGUvZWZBelJhYkMjWnhYdFViY0h3QUE3anBjVTBINlY3ckFNUmZpU19yYm9IOUg5Wk45UzItVQ==&#34;&gt;题目附件&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;题目信息&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题目信息&#34;&gt;#&lt;/a&gt; 题目信息&lt;/h3&gt;
&lt;p&gt;题目用的是 DSA 公钥密码签名系统。&lt;/p&gt;
&lt;p&gt;题目提供签名函数：用户以用户名注册，服务端返回签名，&lt;strong&gt;并提供所用临时密钥的 bit 长度&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们需要以 admin 的身份登陆来获取 flag，但是服务端不会给 admin 签名&lt;/p&gt;
&lt;h3 id=&#34;解题流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#解题流程&#34;&gt;#&lt;/a&gt; 解题流程&lt;/h3&gt;
&lt;p&gt;根据题目流程，显然，我们要利用临时密钥的 bit 长度来获取私钥，从而获得 admin 的签名&lt;/p&gt;
&lt;p&gt;其中，我们知道的信息全局公钥 p, q, g，服务端公钥 y , 每轮签名使用的 r, s, 以及我们可控的 H (x)，x 即为用户名，Hash 函数这里用的是 sha256&lt;/p&gt;
&lt;h4 id=&#34;step1-公式转化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#step1-公式转化&#34;&gt;#&lt;/a&gt; step1 - 公式转化&lt;/h4&gt;
&lt;p&gt;由 DSA 签名中各参数的关系&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2020/05/09/yomndMflri8wUZt.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可得每轮临时密钥与签名、明文的关系&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2020/05/09/H2LJSVgjyd9waON.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;其中 ki 就是每次使用的临时密钥&lt;/p&gt;
&lt;p&gt;化简后的式子中的 Ai,Bi 均可由已知信息计算&lt;/p&gt;
&lt;h4 id=&#34;step2-构造lattice&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#step2-构造lattice&#34;&gt;#&lt;/a&gt; step2 - 构造 Lattice&lt;/h4&gt;
&lt;p&gt;对于上式中的 ki，我们仅仅知道它的 bit_ength，bit_ength 泄露了什么信息呢？&lt;/p&gt;
&lt;p&gt;当我们知道一个数的 bit_ength 时，我们能确定这个数的大小范围，&lt;/p&gt;
&lt;p&gt;比如一个数的 bit_ength 是 500 时，我们能确定这个数大小落在 (2&lt;sup&gt;499)-1 与 (2&lt;/sup&gt;500)-1 之间&lt;/p&gt;
&lt;p&gt;所以我们知道这个数的 MSB 位为 2^499&lt;/p&gt;
&lt;p&gt;这等价于，我们知道了临时密钥的一个大概的值，我们设其为 K&lt;/p&gt;
&lt;p&gt;然后我们构造 Lattice&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2020/05/09/dkr61AXCW7EPzcR.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后这里就会存在一个向量&lt;br /&gt;
&lt;img data-src=&#34;https://i.loli.net/2020/05/09/XFETnacORf3gwSm.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;使得&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2020/05/09/ykhUuYQRz6Lq8GZ.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;其中向量 v 中的 x 即为我们的私钥，&lt;/p&gt;
&lt;h4 id=&#34;step3-lll&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#step3-lll&#34;&gt;#&lt;/a&gt; step3-LLL&lt;/h4&gt;
&lt;p&gt;解决格密码的问题 LLL 算法的运用总是必不可少的，可是这里我们该如何利用 LLL 算法去找到向量 vk 呢？&lt;/p&gt;
&lt;p&gt;如果我们的 vk 的长度在格中很小，我们利用 LLL 就很可能将其找出。所以，我们需要与服务端交互，然后收集当 ki 的 bit_length 比较小的情况时的相关数据。比如：我们知道 q 的 bit_length 为 128，那我们可以找 bit_legnth 为 122 的 ki，然后我们还需要一定的数据量，这样能提高利用 LLL 算法找到这个短向量的概率，并且，上述格中 K/q, K 的构造也是为了让 vk 中的每一项的长度都差不多，这样也有利于找到 vk，参考这一篇&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ob2xvY2lyY3VpdC5naXRodWIuaW8vMjAxOS8wMS8wOC91bm9mZmljaWFsLmh0bWw=&#34;&gt;文章&lt;/span&gt;中的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2020/05/09/7NJvL2DSsXwHEnr.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;npuctf2020-babylcg&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#npuctf2020-babylcg&#34;&gt;#&lt;/a&gt; NPUCTF2020-babyLCG&lt;/h2&gt;
&lt;p&gt;题目附件可以在&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9idXVvai5jbi9jaGFsbGVuZ2VzIyU1Qk5QVUNURjIwMjAlNURiYWJ5TENH&#34;&gt; BUUOJ&lt;/span&gt; 下载&lt;/p&gt;
&lt;h3 id=&#34;题目流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题目流程&#34;&gt;#&lt;/a&gt; 题目流程&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;初始化一个 LCG 加密类，用到随机参数 a, b, m, seed，其中 a, b, m，均在附件给出&lt;/li&gt;
&lt;li&gt;生成 20 个 128 位的随机数，但是只给出每个数的高 64 位&lt;/li&gt;
&lt;li&gt;再生成三个随机数，用 AES 加密加密 flag，key 由前两个随机数组成，分别取第一个随机数和第二个随机数的高 64 位拼起来，iv 由第三个随机数组成&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;解题思路&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#解题思路&#34;&gt;#&lt;/a&gt; 解题思路&lt;/h3&gt;
&lt;p&gt;从题目流程来看，我们目的只有一个，恢复 seed。&lt;/p&gt;
&lt;h4 id=&#34;step1-公式转化-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#step1-公式转化-2&#34;&gt;#&lt;/a&gt; step1 - 公式转化&lt;/h4&gt;
&lt;p&gt;LCG 生成随机数的公式为：&lt;img data-src=&#34;https://i.loli.net/2020/05/09/9YZKClW4tPdzmbS.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;但是这一题，我们只知道 s1 到 s20 的高 64 位，所以我们将 si 分为 h、l 高低位两部分，其中 hi 已知。所以有&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2020/05/09/2jVZ7n8dbECkimQ.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这里，我们通过公式的变形，可以将原来式子&lt;img data-src=&#34;https://i.loli.net/2020/05/09/9YZKClW4tPdzmbS.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;中 s {i+1} 和 s {i} 的关系转变为 l {i+1} 和 l {i} 的关系。当然，原系数 a、b 的意义也发生了对应转变。&lt;/p&gt;
&lt;p&gt;这里给出生成新 A 和 B 的脚本&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;b=&lt;span class=&#34;number&#34;&gt;153582801876235638173762045261195852087&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a=&lt;span class=&#34;number&#34;&gt;107763262682494809191803026213015101802&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=&lt;span class=&#34;number&#34;&gt;226649634126248141841388712969771891297&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;h = [&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;7800489346663478448&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;11267068470666042741&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5820429484185778982&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;6151953690371151688&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;548598048162918265&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1586400863715808041&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;7464677042285115264&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4702115170280353188&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5123967912274624410&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;8517471683845309964&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2106353633794059980&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;11042210261466318284&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4280340333946566776&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;6859855443227901284&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3149000387344084971&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;7055653494757088867&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5378774397517873605&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;8265548624197463024&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2898083382910841577&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4927088585601943730&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(h)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    h[i] &amp;lt;&amp;lt;= &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;A = [&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;B = [&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(h)-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    A.append(a*A[i-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] % m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    B.append((a*B[i-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]+a*h[i]+b-h[i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]) % m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(A[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(B[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&#34;step2-构造lattice-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#step2-构造lattice-2&#34;&gt;#&lt;/a&gt; step2 - 构造 Lattice&lt;/h4&gt;
&lt;p&gt;现在我们二十条与 l 相关的方程组了。即&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2020/05/09/3fDiQKOonJuUzrA.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;且对于 l 我们真的一无所知么？我们其实知道 l 是小于 2^64 的，即 l 最大为 64bit。这样与前面一道题就很类似了。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2020/05/09/bRTmoz5J8pvPK2x.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;其中 l1 即为 s1 的低位，拼上其高位，在利用 a, b, m 就能会恢复 seed 了&lt;/p&gt;
&lt;h4 id=&#34;step3-lll-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#step3-lll-2&#34;&gt;#&lt;/a&gt; step3-LLL&lt;/h4&gt;
&lt;p&gt;这里我们的 vl 向量每一位都只有约 64bit，显然，它是整个格中比较短的向量了，且我们一共有 19 组数据，那么直接对这个 Lattice M 运用 LLL 算法就可以找到 vl 了。（格中参数 2^{64} 的选取道理与上面一致）&lt;/p&gt;
&lt;p&gt;完整 exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;#sage&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;b=153582801876235638173762045261195852087&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;a=107763262682494809191803026213015101802&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;m=226649634126248141841388712969771891297&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;h = [0,7800489346663478448,11267068470666042741,5820429484185778982,6151953690371151688,548598048162918265,1586400863715808041,7464677042285115264,4702115170280353188,5123967912274624410,8517471683845309964,2106353633794059980,11042210261466318284,4280340333946566776,6859855443227901284,3149000387344084971,7055653494757088867,5378774397517873605,8265548624197463024,2898083382910841577,4927088585601943730]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;for i in range(len(h)):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    h[i] &amp;lt;&amp;lt;= 64&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;A = [1]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;B = [0]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;for i in range(1, len(h)-1):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    A.append(a*A[i-1] % m)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    B.append((a*B[i-1]+a*h[i]+b-h[i+1]) % m)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;A = A[1:]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;B = B[1:]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;M = matrix(ZZ, 21, 21)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;for i in range(19):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    M[i, i] = m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    M[19, i] = A[i]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    M[20, i] = B[i]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    M[i, 19] = M[i, 20] = 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;M[19, 19] =  1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;M[20, 20] = 2^64&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;M[19, 20]= 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;#print(B)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;vl = M.LLL()[0]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;l1 = vl[-2]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;h1 = h[1]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;s1 = l1+h1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;#s1 = a*seed+b %m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;seed = ((s1 - b)*inverse_mod(a,m))%m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;print(seed)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#python&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; Crypto.Cipher &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; AES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;LCG&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;__init__&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;self, bit_length&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        b = &lt;span class=&#34;number&#34;&gt;153582801876235638173762045261195852087&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        a = &lt;span class=&#34;number&#34;&gt;107763262682494809191803026213015101802&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        m = &lt;span class=&#34;number&#34;&gt;226649634126248141841388712969771891297&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        seed = &lt;span class=&#34;number&#34;&gt;73991202721494681711496408225724067994&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self._key = &amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;:a, &lt;span class=&#34;string&#34;&gt;&amp;#x27;b&amp;#x27;&lt;/span&gt;:b, &lt;span class=&#34;string&#34;&gt;&amp;#x27;m&amp;#x27;&lt;/span&gt;:m&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self._state = seed&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;next&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;self&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self._state = (self._key[&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;] * self._state + self._key[&lt;span class=&#34;string&#34;&gt;&amp;#x27;b&amp;#x27;&lt;/span&gt;]) % self._key[&lt;span class=&#34;string&#34;&gt;&amp;#x27;m&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; self._state&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;export_key&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;self&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; self._key&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;gen_lcg&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    rand_iter = LCG(&lt;span class=&#34;number&#34;&gt;128&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    key = rand_iter.export_key()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f = &lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;key&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;w&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f.write(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(key))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; rand_iter&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;leak_data&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;rand_iter&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f = &lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;old&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;w&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        f.write(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(rand_iter.&lt;span class=&#34;built_in&#34;&gt;next&lt;/span&gt;() &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;) + &lt;span class=&#34;string&#34;&gt;&amp;quot;n&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; rand_iter&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;encrypt&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;rand_iter&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f = &lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;ct&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;wb&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    key = rand_iter.&lt;span class=&#34;built_in&#34;&gt;next&lt;/span&gt;() &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    key = (key &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;) + (rand_iter.&lt;span class=&#34;built_in&#34;&gt;next&lt;/span&gt;() &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    key = long_to_bytes(key).ljust(&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    iv = long_to_bytes(rand_iter.&lt;span class=&#34;built_in&#34;&gt;next&lt;/span&gt;()).ljust(&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cipher = AES.new(key, AES.MODE_CBC, iv)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pt = flag + (&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt; - &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag) % &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;) * &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt; - &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag) % &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ct = cipher.encrypt(pt.encode())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f.write(ct)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;decrypt&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;rand_iter&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;ct&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;rb&amp;quot;&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; f:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        flag = f.read()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    key = rand_iter.&lt;span class=&#34;built_in&#34;&gt;next&lt;/span&gt;() &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    key = (key &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;) + (rand_iter.&lt;span class=&#34;built_in&#34;&gt;next&lt;/span&gt;() &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    key = long_to_bytes(key).ljust(&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    iv = long_to_bytes(rand_iter.&lt;span class=&#34;built_in&#34;&gt;next&lt;/span&gt;()).ljust(&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cipher = AES.new(key, AES.MODE_CBC, iv)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ct = cipher.decrypt(flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(ct)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    rand_iter = gen_lcg()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    rand_iter = leak_data(rand_iter)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    decrypt(rand_iter)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; __name__ == &lt;span class=&#34;string&#34;&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    main()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://justgo00.github.io/2024/01/12/%E4%B8%89%E7%A7%8D%E6%A4%AD%E5%9C%86%E6%9B%B2%E7%BA%BF%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/</guid>
            <title>ECC常见格式变换</title>
            <link>https://justgo00.github.io/2024/01/12/%E4%B8%89%E7%A7%8D%E6%A4%AD%E5%9C%86%E6%9B%B2%E7%BA%BF%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/</link>
            <pubDate>Fri, 12 Jan 2024 22:31:06 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;维尔斯特拉斯曲线&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#维尔斯特拉斯曲线&#34;&gt;#&lt;/a&gt; 维尔斯特拉斯曲线：&lt;/h3&gt;
&lt;p&gt;椭圆曲线的一般形式可表示为：&lt;/p&gt;
&lt;p&gt;E:y^2 = x^3 + A*x + B&lt;/p&gt;
&lt;p&gt;A,B 属于 Fp,4&lt;em&gt;A^3 + 27&lt;/em&gt;B^2 != 0, 一般称上式为维尔斯特拉斯形式的&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuemhpaHUuY29tL3NlYXJjaD9xPSVFNiVBNCVBRCVFNSU5QyU4NiVFNiU5QiVCMiVFNyVCQSVCRiVFNiU5NiVCOSVFNyVBOCU4QiZhbXA7c2VhcmNoX3NvdXJjZT1FbnRpdHkmYW1wO2h5YnJpZF9zZWFyY2hfc291cmNlPUVudGl0eSZhbXA7aHlicmlkX3NlYXJjaF9leHRyYT0lN0IlMjJzb3VyY2VUeXBlJTIyJTNBJTIyYW5zd2VyJTIyJTJDJTIyc291cmNlSWQlMjIlM0EyNTE0Mjc5NzgzJTdE&#34;&gt;椭圆曲线方程&lt;/span&gt;.&lt;/p&gt;
&lt;h3 id=&#34;蒙哥马利曲线&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#蒙哥马利曲线&#34;&gt;#&lt;/a&gt; 蒙哥马利曲线:&lt;/h3&gt;
&lt;p&gt;蒙哥马利形式的椭圆曲线方程定义为：&lt;/p&gt;
&lt;p&gt;K&lt;em&gt;t^2 = s^3  + J&lt;/em&gt;s^2 + s&lt;/p&gt;
&lt;p&gt;其中 K，J 属于 Fp，B (A^2 - 4) != 0。&lt;/p&gt;
&lt;h3 id=&#34;扭曲爱德华曲线&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#扭曲爱德华曲线&#34;&gt;#&lt;/a&gt; 扭曲爱德华曲线：&lt;/h3&gt;
&lt;p&gt;扭曲爱德华形式的椭圆曲线方程定义为：&lt;/p&gt;
&lt;p&gt;a&lt;em&gt;v^2 + w^2 = 1 + d&lt;/em&gt;v&lt;sup&gt;2*w&lt;/sup&gt;2&lt;/p&gt;
&lt;p&gt;其中 a,d != 0,a != d。&lt;/p&gt;
&lt;h2 id=&#34;椭圆曲线间的转换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#椭圆曲线间的转换&#34;&gt;#&lt;/a&gt; 椭圆曲线间的转换：&lt;/h2&gt;
&lt;p&gt;维尔斯特拉斯曲线、蒙哥马利曲线、扭曲爱德华曲线这三类椭圆曲线之间可以相互转换。&lt;/p&gt;
&lt;h3 id=&#34;蒙哥马利曲线-维尔斯特拉斯曲线&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#蒙哥马利曲线-维尔斯特拉斯曲线&#34;&gt;#&lt;/a&gt; 蒙哥马利曲线 &amp;lt;-&amp;gt; 维尔斯特拉斯曲线&lt;/h3&gt;
&lt;p&gt;任何椭圆曲线都可以写为维尔斯特拉斯形式。反之，当满足特定条件时，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuemhpaHUuY29tL3NlYXJjaD9xPSVFNyVCQiVCNCVFNSVCMCU5NCVFNiU5NiVBRiVFNyU4OSVCOSVFNiU4QiU4OSVFNiU5NiVBRiVFNiVBNCVBRCVFNSU5QyU4NiVFNiU5QiVCMiVFNyVCQSVCRiZhbXA7c2VhcmNoX3NvdXJjZT1FbnRpdHkmYW1wO2h5YnJpZF9zZWFyY2hfc291cmNlPUVudGl0eSZhbXA7aHlicmlkX3NlYXJjaF9leHRyYT0lN0IlMjJzb3VyY2VUeXBlJTIyJTNBJTIyYW5zd2VyJTIyJTJDJTIyc291cmNlSWQlMjIlM0EyNTE0Mjc5NzgzJTdE&#34;&gt;维尔斯特拉斯椭圆曲线&lt;/span&gt;可以转换为蒙哥马利椭圆曲线。具体转换条件参见&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9saW5rLnpoaWh1LmNvbS8/dGFyZ2V0PWh0dHBzJTNBLy9lbi53aWtpcGVkaWEub3JnL3dpa2kvTW9udGdvbWVyeV9jdXJ2ZQ==&#34;&gt;《Montgomery Curve5.png)》&lt;/span&gt;的 Equivalence with Weierstrass curves 部分。&lt;/p&gt;
&lt;p&gt;![屏幕截图 2023-08-27 224205](F:\ 资料 \crypto 文本 \ECC 椭圆曲线 \ 屏幕截图 2023-08-27 224205.png)&lt;/p&gt;
&lt;h3 id=&#34;扭曲爱德华曲线-蒙哥马利曲线&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#扭曲爱德华曲线-蒙哥马利曲线&#34;&gt;#&lt;/a&gt; 扭曲爱德华曲线 &amp;lt;-&amp;gt; 蒙哥马利曲线&lt;/h3&gt;
&lt;p&gt;所有扭曲爱德华曲线都与蒙哥马利曲线双向有理等价（Birationally Equivalent），反之亦然。所谓双向有理等价，可以理解为除了个别点外，扭曲爱德华曲线的点和蒙哥马利曲线的点存在相互映射关系。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2022 NCTF spurecc&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;题目：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 题目&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; secrets &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; INF, flag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;assert&lt;/span&gt; flag[:&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;] == &lt;span class=&#34;string&#34;&gt;b&amp;#x27;nctf&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;super_ecc&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;__init__&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;self&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.a =&lt;span class=&#34;number&#34;&gt;73101304688827564515346974949973801514688319206271902046500036921488731301311&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.c =&lt;span class=&#34;number&#34;&gt;78293161515104296317366169782119919020288033620228629011270781387408756505563&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.d =&lt;span class=&#34;number&#34;&gt;37207943854782934242920295594440274620695938273948375125575487686242348905415&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.p =&lt;span class=&#34;number&#34;&gt;101194790049284589034264952247851014979689350430642214419992564316981817280629&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;self, P, Q&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        (x1, y1) = P&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        (x2, y2) = Q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        x3 = (x1 * y2 + y1 * x2) * inverse(self.c * (&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; +self.d * x1 * x2 * y1 * y2), self.p) % self.p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        y3 = (y1 * y2 - self.a * x1 * x2) * inverse(self.c* (&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; - self.d * x1 * x2 * y1 * y2), self.p) % self.p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (x3, y3)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;mul&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;self, x, P&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Q = INF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        x = x % self.p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; x &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; x % &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                Q = self.add(Q, P)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                P = self.add(P, P)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                x = x &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; Q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = bytes_to_long(flag[&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ecc = super_ecc()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;G =(&lt;span class=&#34;number&#34;&gt;30539694658216287049186009602647603628954716157157860526895528661673536165645&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;64972626416868540980868991814580825204126662282378873382506584276702563849986&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;S = ecc.mul(flag, G)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(S)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#(98194560294138607903211673286210561363390596541458961277934545796708736630623,58504021112693314176230785309962217759011765879155504422231569879170659690008)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;wp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;Twist_Edwards_to_Montgomery&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;a,d,G,p&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    A = (&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;*(a+d))*inverse_mod(a-d,p) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    B = &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; * inverse_mod(a-d,p) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    u = (&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;+G[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]) * inverse_mod(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;-G[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;],p) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v = ((&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;+G[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]) * inverse_mod((&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;-G[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;])*G[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;], p)) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;(A,B,(u,v))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;Twist_Montgomery_to_Weierstrass&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;A,B,G,p&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    t = ((&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; * G[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] + A) * inverse_mod(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;*B, p))%p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v = (G[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] * inverse_mod(B, p))%p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a = ((&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;-A^&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) * inverse_mod(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;*B^&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, p))%p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b = ((&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;*A^&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;*A) * inverse_mod(&lt;span class=&#34;number&#34;&gt;27&lt;/span&gt;*B^&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, p))%p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (a,b,(t,v))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;number&#34;&gt;73101304688827564515346974949973801514688319206271902046500036921488731301311&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c = &lt;span class=&#34;number&#34;&gt;78293161515104296317366169782119919020288033620228629011270781387408756505563&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d = &lt;span class=&#34;number&#34;&gt;37207943854782934242920295594440274620695938273948375125575487686242348905415&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = &lt;span class=&#34;number&#34;&gt;101194790049284589034264952247851014979689350430642214419992564316981817280629&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;G = (&lt;span class=&#34;number&#34;&gt;30539694658216287049186009602647603628954716157157860526895528661673536165645&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;64972626416868540980868991814580825204126662282378873382506584276702563849986&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Q = (&lt;span class=&#34;number&#34;&gt;98194560294138607903211673286210561363390596541458961277934545796708736630623&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;58504021112693314176230785309962217759011765879155504422231569879170659690008&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;G_ = (G[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]*inverse_mod(c,p)%p,G[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]*inverse_mod(c,p)%p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Q_ = (Q[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]*inverse_mod(c,p)%p,Q[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]*inverse_mod(c,p)%p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d_ = d * c^&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;A_,B_,G1 = Twist_Edwards_to_Montgomery(a,d_,G_,p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a_,b_,G1 = Twist_Montgomery_to_Weierstrass(A_,B_,G1,p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;A,B,Q1 = Twist_Edwards_to_Montgomery(a, d_, Q_, p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a_1,b_1,Q1 = Twist_Montgomery_to_Weierstrass(A, B, Q1, p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# print(G1,a_,b_)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;E = EllipticCurve(GF(p),[a_,b_])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;G1 = E(G1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Q1 = E(Q1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(G1,Q1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x = G1.order()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(factor(G1.order())[:-&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fac_,rc = [],[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i,j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; factor(x)[:-&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(i,j)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fac = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(i)^&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(j)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#     print(fac)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    k = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(x) // fac&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#     print(k)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fac_.append(fac)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dis = discrete_log(k*Q1,k*G1,operation = &lt;span class=&#34;string&#34;&gt;&amp;quot;+&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    rc.append(dis)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(fac_,rc)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;_____&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m = crt(rc,fac_)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m = &lt;span class=&#34;number&#34;&gt;1558115275100082829946&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt;*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(long_to_bytes(m))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://justgo00.github.io/2023/12/25/%E5%AE%89%E6%B4%B5%E6%9D%AF2023/</guid>
            <title>2023安洵杯-Crypto</title>
            <link>https://justgo00.github.io/2023/12/25/%E5%AE%89%E6%B4%B5%E6%9D%AF2023/</link>
            <pubDate>Mon, 25 Dec 2023 11:31:36 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;010101&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#010101&#34;&gt;#&lt;/a&gt; 010101&lt;/h2&gt;
&lt;p&gt;爆破，1024*1024 次，前 1024 对应修改前 1024 的 1bit，后一段将前 1024bit 所对应同位置的后 1024 的 0bit 修改：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; itertools&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; string &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; tqdm &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; tqdm&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; hashlib &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level = &lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh = remote(&lt;span class=&#34;string&#34;&gt;&amp;#x27;124.71.177.14&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;10001&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;SHA256(XXXX + &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m_known = sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;)&amp;#x27;&lt;/span&gt;)[:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c_known = sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;)[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ascii = ascii_letters + digits&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m_unknown = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i0 &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; tqdm(Ascii):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i1,i2,i3 &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; itertools.product(Ascii,Ascii,Ascii):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        m = i0.encode() + i1.encode() + i2.encode() + i3.encode() + m_known&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        c_solve = sha256(m).hexdigest()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; c_solve.encode() == c_known:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            m_unknown = m[:&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(m[:&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; m_unknown != &lt;span class=&#34;string&#34;&gt;b&amp;#x27;&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(m_unknown)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;Press 1 to get ciphertext\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n = sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;)[:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;)[:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c = sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;)[:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n,p_known,c = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(n),&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(p,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;),&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(n,p_known,c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e = &lt;span class=&#34;number&#34;&gt;0x10001&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n = &lt;span class=&#34;number&#34;&gtlt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p_known = &lt;span class=&#34;number&#34;&gt;27891442645341471288170167216869935613920976137887903714313638802373006773267565599597204373102523757582428451329858211065310139216678459999734807018922017770060342702550735543090801248386258005345518262143850572941350241016988378819690890844218261015415182311461752769583929809807049921985214679177749792217513351089220995239090088571179761822479553794957519709643176122743020402215768885756118676348026660960511688983890880515870145420044585582165469826852127713925014399205933331554164478946203701557458374273244827503769991306663425004640455624211909357330253463008915366448637642808264987962486894003590879922041&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c = &lt;span class=&#34;number&#34;&gtlt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p1_known = &lt;span class=&#34;built_in&#34;&gt;bin&lt;/span&gt;(p_known)[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p1 = p1_known[:&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p2 = p1_known[&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;:]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(p1),&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(p2))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; GCD(n,p_known) == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i1 &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; tqdm(&lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i2 &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; p1[i1] == &lt;span class=&#34;string&#34;&gt;&amp;#x27;0&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; p1[i2] == &lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                P1 = (&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(p1,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;) + &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(p2,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;**(&lt;span class=&#34;number&#34;&gt;2047&lt;/span&gt; - i1) - &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;**(&lt;span class=&#34;number&#34;&gt;1023&lt;/span&gt; - i2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                P2 = (&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(p1,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;) + &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(p2,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;**(&lt;span class=&#34;number&#34;&gt;2047&lt;/span&gt; - i1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; GCD(n,P1) != &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    p = GCD(n,P1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; GCD(n,P2) != &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    p = GCD(n,P2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; p != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p = GCD(n,p_known)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = &lt;span class=&#34;number&#34;&gt;27891442645341471288170167216869935613920976137887903714313638802373006773267565599597204373102523757582428451329858211065310139216678459999734807018922017770060342702550735543090801248386258005345518262143850572941350241016988381484121532678304425988276706116667650655091065110083480083677976382501413068597749642222518078714081408231112934118417548389150479280450192606559111455609884194333273079988435178895449202349279801593481805628636255775746819599262717656325368815400568015035479118603375807392104141506679622057326955381876697854105339628185292192129738578646170759229660295272111570930988796263602074568569&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q = n//p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d = inverse(e,(p-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)*(q-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(long_to_bytes(&lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(c,d,n)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;poa&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#poa&#34;&gt;#&lt;/a&gt; POA&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oYWNrbWQuaW8vQExpYW5neXVoby9yMTVOeXN5WmkjTGFiLVBPQQ==&#34;&gt;https://hackmd.io/@Liangyuho/r15NysyZi#Lab-POA&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;asserts 有问题：可以通过构造最后一个字符来使其满足 num 的判断条件过即可。&lt;/p&gt;
&lt;p&gt;Padding Oracle Attack：由于最后一直是 b&#39;\x04&#39;*4 将其更改为 b&#39;\x0i&#39;*i 即可爆破除此之外最后一位，判定是 True 即通过验证：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; itertools&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; string &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; tqdm &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; tqdm&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; hashlib &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# context.log_level = &amp;#x27;Debug&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh = remote(&lt;span class=&#34;string&#34;&gt;&amp;#x27;124.71.177.14&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;10010&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;SHA256(XXXX + &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m_known = sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;)&amp;#x27;&lt;/span&gt;)[:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c_known = sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;)[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ascii = ascii_letters + digits&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m_unknown = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i0 &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; tqdm(Ascii):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i1,i2,i3 &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; itertools.product(Ascii,Ascii,Ascii):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        m = i0.encode() + i1.encode() + i2.encode() + i3.encode() + m_known&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        c_solve = sha256(m).hexdigest()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; c_solve.encode() == c_known:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            m_unknown = m[:&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(m[:&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; m_unknown != &lt;span class=&#34;string&#34;&gt;b&amp;#x27;&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(m_unknown)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;Welcome to AES System, please choose the following options:\n1. encrypt the flag\n2. decrypt the flag\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;This is your flag: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Cipher = sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;)[:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;IV = &lt;span class=&#34;built_in&#34;&gt;bytes&lt;/span&gt;.fromhex(Cipher[:&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;].decode())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Cipher1 = &lt;span class=&#34;built_in&#34;&gt;bytes&lt;/span&gt;.fromhex(Cipher[&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;:].decode())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;2&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;Please enter ciphertext:\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(Cipher)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.recv()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; tqdm(&lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;128&lt;/span&gt;)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        I = (i&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt;) + (i&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;) + (i&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) + i&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        num = &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        K = long_to_bytes(bytes_to_long(m[::-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;])^bytes_to_long(IV[-&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;-num:-&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;])^bytes_to_long(long_to_bytes(i)*num))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; bytes_to_long(K) != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            iv = IV[:&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;-i] + long_to_bytes(IV[-i]^j^i) + K + long_to_bytes(bytes_to_long(IV[-&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;:])^bytes_to_long(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x04&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)^I)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            cipher = &lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(bytes_to_long(iv + Cipher1))[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            sh.sendline(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;2&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;Please enter ciphertext:\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            sh.sendline(&lt;span class=&#34;string&#34;&gt;f&amp;#x27;&lt;span class=&#34;subst&#34;&gt;&amp;#123;cipher&amp;#125;&lt;/span&gt;&amp;#x27;&lt;/span&gt;.encode())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Asser = sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;)[:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; Asser == &lt;span class=&#34;string&#34;&gt;b&amp;#x27;True&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                m += long_to_bytes(j)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            iv = IV[:&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt; - i] + long_to_bytes(IV[-i] ^ j ^ i) + long_to_bytes(bytes_to_long(IV[-&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;:]) ^ bytes_to_long(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x04&amp;#x27;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;) ^ I)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            cipher = &lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(bytes_to_long(iv + Cipher1))[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            sh.sendline(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;2&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;Please enter ciphertext:\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            sh.sendline(&lt;span class=&#34;string&#34;&gt;f&amp;#x27;&lt;span class=&#34;subst&#34;&gt;&amp;#123;cipher&amp;#125;&lt;/span&gt;&amp;#x27;&lt;/span&gt;.encode())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Asser = sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;)[:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; Asser == &lt;span class=&#34;string&#34;&gt;b&amp;#x27;True&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                m += long_to_bytes(j)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(m[::-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;rabin&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rabin&#34;&gt;#&lt;/a&gt; Rabin&lt;/h2&gt;
&lt;p&gt;在 10 范围内爆破 x，求解出 r 的值，&lt;br /&gt;
借鉴：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ppaHVvY2MvYXJ0aWNsZS9kZXRhaWxzLzEyMDY1MTEzNQ==&#34;&gt;https://blog.csdn.net/zihuocc/article/details/120651135&lt;/span&gt;&lt;br /&gt;
 已知&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pinv = gmpy2.invert(p, q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;qinv = gmpy2.invert(q, p)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;问题：&lt;br /&gt;
构造一元二次方程求解得到 p 和 q，m1 分别求出 mod p,q,r 的值进行 crt，m2rsa 正常求解即可：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; itertools&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; sympy&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; string &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; tqdm &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; tqdm&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; hashlib &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level = &lt;span class=&#34;string&#34;&gt;&amp;#x27;Debug&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh = remote(&lt;span class=&#34;string&#34;&gt;&amp;#x27;124.71.177.14&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;10100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;SHA256(XXXX + &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m_known = sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;)&amp;#x27;&lt;/span&gt;)[:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c_known = sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;)[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ascii = ascii_letters + digits&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m_unknown = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i0 &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; tqdm(Ascii):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i1,i2,i3 &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; itertools.product(Ascii,Ascii,Ascii):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        m = i0.encode() + i1.encode() + i2.encode() + i3.encode() + m_known&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        c_solve = sha256(m).hexdigest()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; c_solve.encode() == c_known:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            m_unknown = m[:&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(m[:&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; m_unknown != &lt;span class=&#34;string&#34;&gt;b&amp;#x27;&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;Give Me XXXX:\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(m_unknown)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;Press 1 to get ciphertext\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n = sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;)[:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;inv_p = sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;)[:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;inv_q = sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;)[:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c1 = sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;)[:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c2 = sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;)[:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(n, c1, c2, inv_p, inv_q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 艹不知道为啥，这交互慢的要命…… 至少20min &amp;lt;T.T&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n = &lt;span class=&#34;number&#34;&gt;183987587143083305750638864741407863923066099782864154580267469149728994880657570133628593815340703423130808072042283432235668162110304727032469349818428594850114032836721059649060586457507042662464379681225799719547376778879892377161137617888550330618273821996921933536968406356415014636320792411076595369790832682535290391998215505392562535334689950656071247615403386833974357610616482330477454659815690886537108032914432160993101358865904833275712353054327326082632477505857103365761111509150252273473575155750128383303603084251849472529054003507006328264974832315264066273127150422692348254339443982364191180087180878485663255197479064278456976511234765342274507459896194694227553128298951687077339240323218992215408248085353278374922175066931250462259712424321315238980442891083421664345230471303294574871528133081474391282040653438383124563281407745319250784879700295814386412611424520183046275481807985491628553004177755979602501534168740985961147231942480826645219388936912242078688559343573107&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;inv_p = &lt;span class=&#34;number&#34;&gt;127845044471279367677718324154714190170411442951976335879181929992579724348172384278151756616370397982157599479281137995696110012050983742181098969952031972352103281622783571648831313121189442432245831329344239077026067240880549019768085314848246412852799787951830235096482328679240841938011206165609815383491&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;inv_q = &lt;span class=&#34;number&#34;&gt;2134373308686127869824012920235663188613836975539988801351778115016060917918972248018441011896101405651729965838553782056992946820419360577389886792055529644385773031492696792977553831288740769701281352083380822549712188033433160242452493149607916520995731405718697382060898409529236207473785500502200361995&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c1 = &lt;span class=&#34;number&#34;&gt;59901508964890767021171064398264307908936667350161073279089572310868586950599325727805284516926810489086383282029992082115158114279180593835803169701700942810053018629391738905143703930934086913540982273330443236667746538429732701951809523675304750766736937339763877920029656639780631165844287334187602517898241652921947025493910278257763965771345399218628063212049751993126278442241517126206052118901633504354294196601208564515049277909100347471128584245711888353326687448071412582110424351004920378098328523186295600506618754473033470916355851161411204287135529246232724954362903970944285164859503600818302414209685312167204874428095742390465315760971742279760806823364290637281424568825384593296024230459803143984388541835729326499813066762351708329039198239543188649090477464774351842794226813051061524394157031736431437884050496738728928793644527786757199418914055660494694838735359548623173125038401059008672520427656237796747351721788913217323573522405881738683656730997049128483061085936306267&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c2 = &lt;span class=&#34;number&#34;&gt;179139046654217220267267763170248527291049190771802159312733390169571903419133127994426314437316714067990567034080192347653132778316582308221292709704800341059415996304851127207839455586643342656519755777964647860451812841911015248069977267210769968163405707647326502269670462891547054964649530880714013097648355896486034646098850981194098393898791365398165706500787675724118734066847473986499496657848092712981556248030527366087443210423648206436634453535154635193577487859761483910377159921278744232739720660932490244112183435943864574647183327743848943530356519752413021239555719349391028411827915618134456090175589206584795280179251114140549128305447902934165468228580020439478001174641014338747282923580111767489328282308659642552306499462341437479067017284398385452782415399117250916606469104057428182837608003122525658668944970985312055309068750680818935453018191854446066701896066315466697341446593453102861278573178429195822662101991686888371894290311298811217641259505006941685399020732833177&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; tqdm(&lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r = r * x&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; r.bit_length() &amp;gt; &lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; isPrime(r - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            r = r - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; GCD(n,r) != &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(r,x)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(GCD(n,r))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#  12%|█▎        | 1/8 [00:00&amp;lt;00:01,  4.14it/s]10407932194664399081925240327364085538615262247266704805319112350403608059673360298012239441732324184842421613954281007791383566248323464908139906605677320762924129509389220345773183349661583550472959420547689811211693677147548478866962501384438260291732348885311160828538416585028255604666224831890918801847068222203140521026698435488732958028878050869736186900714720710555703168729087 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 10407932194664399081925240327364085538615262247266704805319112350403608059673360298012239441732324184842421613954281007791383566248323464908139906605677320762924129509389220345773183349661583550472959420547689811211693677147548478866962501384438260291732348885311160828538416585028255604666224831890918801847068222203140521026698435488732958028878050869736186900714720710555703168729087&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#  38%|███▊      | 3/8 [00:05&amp;lt;00:08,  1.66s/it]10407932194664399081925240327364085538615262247266704805319112350403608059673360298012239441732324184842421613954281007791383566248323464908139906605677320762924129509389220345773183349661583550472959420547689811211693677147548478866962501384438260291732348885311160828538416585028255604666224831890918801847068222203140521026698435488732958028878050869736186900714720710555703168729087 4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 10407932194664399081925240327364085538615262247266704805319112350403608059673360298012239441732324184842421613954281007791383566248323464908139906605677320762924129509389220345773183349661583550472959420547689811211693677147548478866962501384438260291732348885311160828538416585028255604666224831890918801847068222203140521026698435488732958028878050869736186900714720710555703168729087&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#  88%|████████▊ | 7/8 [00:10&amp;lt;00:00,  1.03it/s]10407932194664399081925240327364085538615262247266704805319112350403608059673360298012239441732324184842421613954281007791383566248323464908139906605677320762924129509389220345773183349661583550472959420547689811211693677147548478866962501384438260291732348885311160828538416585028255604666224831890918801847068222203140521026698435488732958028878050869736186900714720710555703168729087 8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 10407932194664399081925240327364085538615262247266704805319112350403608059673360298012239441732324184842421613954281007791383566248323464908139906605677320762924129509389220345773183349661583550472959420547689811211693677147548478866962501384438260291732348885311160828538416585028255604666224831890918801847068222203140521026698435488732958028878050869736186900714720710555703168729087&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e1,e2,s = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#合理猜测&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r = &lt;span class=&#34;number&#34;&gt;10407932194664399081925240327364085538615262247266704805319112350403608059673360298012239441732324184842421613954281007791383566248323464908139906605677320762924129509389220345773183349661583550472959420547689811211693677147548478866962501384438260291732348885311160828538416585028255604666224831890918801847068222203140521026698435488732958028878050869736186900714720710555703168729087&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p_q = n//r&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# print(p_q)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x = sympy.var(&lt;span class=&#34;string&#34;&gt;&amp;#x27;x&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;f = inv_p*x**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; + (&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;*inv_q*inv_p-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;-p_q)*x + inv_q*(inv_p*inv_q-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X = (sympy.solve(f,x))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# print(X)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;k1 = X[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = inv_q + k1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q = p_q//p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#解m1 sage&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m11 = &lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(c1,(p+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)//&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m12 = &lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(c1,(q+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)//&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m13 = &lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(c1,(r+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)//&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,r)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;M1 = [m11,-m11%p]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;M2 = [m12,-m12%q]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;M3 = [m13,-m13%r]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i1,i2,i3 &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; itertools.product(M1,M2,M3):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    m = crt([&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(i1),&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(i2),&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(i3)],[&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(p),&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(q),&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(r)])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(long_to_bytes(m))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;b&amp;#x27;LuMyRtUKLszlNiuFRZwFjidsLoVPqZAJIQcNplTuKzeReuPjqhegTtacYxqOUDwLzREtwIpHOrBgKgVkVtXcmvqPFrbUHdiOiLqfRRIsVpgupfaVkMRBylQFqPfEYtLsIEuFyonBxKGJbdzkjeQpFpEJLkxakEBisZAtKNGzwrhXzFvfHEQWGzBnnauFjtwbIWmUOpAxZxEGsMgRoKEWcOWIcruyXlbvyvfjPwjcGE D0g3&amp;#123;82309bce-9db6-53&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 解m2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi = (p-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)*(q-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)*(r-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d2 = inverse(e2,phi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m2 = long_to_bytes(&lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(c2,&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(d2),n))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# b&amp;#x27;40-a9e4-a67a9ba15345&amp;#125; zmMzsCTfnAmrQKiOZmvpNILNLhvZWPBuGCEnrQqJcgAbycwdrLEbwcOvVmFRzypqTpAHOMwfARAPqhyLAzXeStUteYcVZoCpUKYwGMiFnGqGkVPnpWEeYTbjhJBjMqiyAwwftBSKTiUyPdqrQfRxVgOIodsaMfLwNsUmFavGiuYPIldOFoKkpnRfagABtOtyWFOLEXGZJadWiqEHppPTHovYLfNFtnTJtFnzqzGqiD&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = &lt;span class=&#34;string&#34;&gt;&amp;#x27;D0g3&amp;#123;82309bce-9db6-5340-a9e4-a67a9ba15345&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://justgo00.github.io/2023/12/25/LUC_RSA/</guid>
            <title>LUC_RSA</title>
            <link>https://justgo00.github.io/2023/12/25/LUC_RSA/</link>
            <pubDate>Mon, 25 Dec 2023 11:21:34 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubWF0aC51LWJvcmRlYXV4LmZyL35nY2FzdGFnbi9wdWJsaS9jcnlwdG9fcXVhZC5wZGY=&#34;&gt;https://www.math.u-bordeaux.fr/~gcastagn/publi/crypto_quad.pdf&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucmVzZWFyY2hnYXRlLm5ldC9wdWJsaWNhdGlvbi8yNjYyMzAzMF9BX05ld19Db21wdXRhdGlvbl9BbGdvcml0aG1fZm9yX2FfQ3J5cHRvc3lzdGVtX0Jhc2VkX29uX0x1Y2FzX0Z1bmN0aW9ucw==&#34;&gt;https://www.researchgate.net/publication/26623030_A_New_Computation_Algorithm_for_a_Cryptosystem_Based_on_Lucas_Functions&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;最近通过 qwb 了解到了这个新东西，顺手进一步加深了对于 LUCAS 序列的理解。&lt;/p&gt;
&lt;h2 id=&#34;典型例题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#典型例题&#34;&gt;#&lt;/a&gt; 典型例题&lt;/h2&gt;
&lt;h3 id=&#34;umass-ctf-2021-weird-rsa&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#umass-ctf-2021-weird-rsa&#34;&gt;#&lt;/a&gt; UMass CTF 2021 - Weird RSA&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; random&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; isPrime&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m, Q = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;REDACTED&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;genPrimes&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;size&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    base = random.getrandbits(size // &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) &amp;lt;&amp;lt; size // &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    base = base | (&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1023&lt;/span&gt;) | (&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1022&lt;/span&gt;) | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        temp = base | random.getrandbits(size // &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; isPrime(temp):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            p = temp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        temp = base | random.getrandbits(size // &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; isPrime(temp):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            q = temp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (p, q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;pow&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;m, e, n&lt;/span&gt;):     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; v(e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;v&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;n&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; n == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; n == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; m&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (m*v(n-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) - Q*v(n-&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)) % N&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p, q = genPrimes(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;N = p * q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e = &lt;span class=&#34;number&#34;&gt;0x10001&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;N:&amp;quot;&lt;/span&gt;, N)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;c:&amp;quot;&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(m, e, N))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;N: 18378141703504870053256589621469911325593449136456168833252297256858537217774550712713558376586907139191035169090694633962713086351032581652760861668116820553602617805166170038411635411122411322217633088733925562474573155702958062785336418656834129389796123636312497589092777440651253803216182746548802100609496930688436148522617770670087143010376380205698834648595913982981670535389045333406092868158446779681106756879563374434867509327405933798082589697167457848396375382835193219251999626538126258606572805220878283429607438382521692951006432650132816122705167004219371235964716616826653226062550260270958038670427&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;c: 14470740653145070679700019966554818534890999807830802232451906444910279478539396448114592242906623394239703347815141824698585119347592990685923384931479024856262941313458084648914561375377956072245149926143782368239175037299219241806241533201175001088200209202522586119648246842120571566051381821899459346757935757111233323915022287370687524912870425787594648397524189694991735372527387329346198018567010117587531474035014342584491831714256980975368294579192077738910916486139823489975038981139084864837358039928972730135031064241393391678984872799573965150169368237298603189344477806873779325227557835790957023000991&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&#34;luc-rsa-solution&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#luc-rsa-solution&#34;&gt;#&lt;/a&gt; LUC-RSA Solution&lt;/h4&gt;
&lt;p&gt;So how does it work? Well to encrypt (as we’ve seen) we calculate the e-th order Lucas sequence with P=m and Q=1. Then, to decrypt we calculate  the d-th order Lucas sequence with P=c and Q=1. Huh, sounds quite neat.  Our next step is to find the private exponent d, however there’s a  catch. We cannot use our familiar&lt;/p&gt;
&lt;p&gt;那么它是如何工作的呢？好吧，为了加密（正如我们所看到的），我们计算 P=m 和 Q=1 的第 e 阶卢卡斯序列。然后，为了解密，我们计算 P=c 和 Q=1 的第 d  阶卢卡斯序列。呵呵，听起来很整洁。我们的下一步是找到私有指数 d，但有一个问题。我们不能使用我们熟悉的&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;d = ~e % phi(N),&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;instead we use 取而代之的是，我们使用&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;d = ~e % LCM( (p +- 1), (q +- 1) ).&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Now we end up with four possible decryption keys. We could easily try them all out, but we can also find the proper form from&lt;/p&gt;
&lt;p&gt;现在我们最终得到了四个可能的解密密钥。我们可以很容易地尝试它们，但我们也可以从中找到合适的形式&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;d = ~e % LCM( (p - LS(D/p)), (q - LS(D/q)) )&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;where LS is the Legendre symbol and D = C^2 - 4 the discriminant  (abc-formula, anyone?). Finally, just to speed things up, we implement a more efficient encryption function (provided by the chall’s author:  Soul). Now we can go and get ourselves a nice flag 😃.&lt;/p&gt;
&lt;p&gt;其中 LS 是勒让德符号，D = C^2 - 4 是判别式（abc 公式，有人吗？最后，为了加快速度，我们实现了一个更有效的加密功能（由 chall 的作者 Soul 提供）。现在我们可以去给自己买一面漂亮的旗帜：) 了。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; long_to_bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; sys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# Increase the Python recursion limit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sys.setrecursionlimit(&lt;span class=&#34;number&#34;&gt;5000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# RSA Parameters&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;N = &lt;span class=&#34;number&#34;&gt;18378141703504870053256589621469911325593449136456168833252297256858537217774550712713558376586907139191035169090694633962713086351032581652760861668116820553602617805166170038411635411122411322217633088733925562474573155702958062785336418656834129389796123636312497589092777440651253803216182746548802100609496930688436148522617770670087143010376380205698834648595913982981670535389045333406092868158446779681106756879563374434867509327405933798082589697167457848396375382835193219251999626538126258606572805220878283429607438382521692951006432650132816122705167004219371235964716616826653226062550260270958038670427&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;C = &lt;span class=&#34;number&#34;&gt;14470740653145070679700019966554818534890999807830802232451906444910279478539396448114592242906623394239703347815141824698585119347592990685923384931479024856262941313458084648914561375377956072245149926143782368239175037299219241806241533201175001088200209202522586119648246842120571566051381821899459346757935757111233323915022287370687524912870425787594648397524189694991735372527387329346198018567010117587531474035014342584491831714256980975368294579192077738910916486139823489975038981139084864837358039928972730135031064241393391678984872799573965150169368237298603189344477806873779325227557835790957023000991&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;E = &lt;span class=&#34;number&#34;&gt;0x10001&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# I used Fermat&amp;#x27;s factorisation method to get p and q using SAGE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;P = &lt;span class=&#34;number&#34;&gt;135566004969921829046861317679102794894163252891621004552763069255612086965641424719754859767153782381891044077537624735662301899417143962916558791489710971298124937969427903581890089403413545652984524659790357002447801666607195021452029447206533810446315939039775701027454771450154054624400219767469987538497&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Q = &lt;span class=&#34;number&#34;&gt;135566004969921829046861317679102794894163252891621004552763069255612086965641424719754859767153782381891044077537624735662301899417143962916558791489710971298124937969427903581890089403413545652984524659790357002447801666607195021441224446867180097273643121640903324702747770969633717818870639347019154977691&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# LUCRSA Cryptosystem (based on second order Lucas sequence (!))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# See https://www.researchgate.net/publication/26623030_A_New_Computation_Algorithm_for_a_Cryptosystem_Based_on_Lucas_Functions&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;D = C**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LS_P = gmpy2.legendre(D,P)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LS_Q = gmpy2.legendre(D,Q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# Get that decryption bread&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d = gmpy2.invert(E, gmpy2.lcm(P-LS_P, Q-LS_Q))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# If you can, prevent v_dict&amp;#123;&amp;#125; from initialising again as it&amp;#x27;ll save you time for future computations :)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v_dict = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# Function I got from Soul, what a nice guy!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;v&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;n&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; n == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; n == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; m&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; n &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; v_dict.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; v_dict[n]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(n % &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ret = (&lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(v(n // &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;), &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, N) - &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * &lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(Q, n, N)) % N&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ret = (m * &lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(v(n // &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;), &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, N) - Q * v(n // &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) * v((n // &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) - m * &lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(Q, n, N)) % N&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v_dict[n] = ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m = C; Q = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Capturing the flag...&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = v(d)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Got it!&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(long_to_bytes(flag))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;hfctf2022-rrssaahttpsctfnjupteducnarchives740rrssaa&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hfctf2022-rrssaahttpsctfnjupteducnarchives740rrssaa&#34;&gt;#&lt;/a&gt; hfctf2022 RRSSAA（&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jdGYubmp1cHQuZWR1LmNuL2FyY2hpdmVzLzc0MCNSUlNTQUElRUYlQkMlODk=&#34;&gt;https://ctf.njupt.edu.cn/archives/740#RRSSAA）&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;n = p&lt;sup&gt;2*q&lt;/sup&gt;2&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubWF0aC51LWJvcmRlYXV4LmZyL35nY2FzdGFnbi9wdWJsaS9jcnlwdG9fcXVhZC5wZGY=&#34;&gt;https://www.math.u-bordeaux.fr/~gcastagn/publi/crypto_quad.pdf&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; sage.rings.finite_rings.integer_mod &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; lucas&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; long_to_bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; sys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sys.setrecursionlimit(&lt;span class=&#34;number&#34;&gt;5000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;N = &lt;span class=&#34;number&#34;&gt;59969098213446598961510550233718258878862148298191323654672950330070587404726715299685997489142290693126366408044603303463518341243526241117556011994804902686998166238333549719269703453450958140262475942580009981324936992976252832887660977703209225426388975233018602730303262439218292062822981478737257836581&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;E = &lt;span class=&#34;number&#34;&gt;970698965238639683403205181589498135440069660016843488485401994654202837058754446853559143754852628922125327583411039117445415303888796067576548626904070971514824878024057391507617988385537930417136322298476467215300995795105008488692961624917433064070351961856959734368784774555385603000155569897078026670993484466622344106374637350023474339105113172687604783395923403613555236693496567851779400707953027457705617050061193750124237055690801725151098972239120476113241310088089420901051617493693842562637896252448161948655455277146925913049354086353328749354876619287042077221173795354616472050669799421983520421287&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;C = &lt;span class=&#34;number&#34;&gt;2757297249371055260112176788534868300821961060153993508569437878576838431569949051806118959108641317578931985550844206475198216543139472405873345269094341570473142756599117266569746703013099627523306340748466413993624965897996985230542275127290795414763432332819334757831671028121489964563214463689614865416498886490980692515184662350519034273510244222407505570929178897273048405431658365659592815446583970229985655015539079874797518564867199632672678818617933927005198847206019475149998468493858071672920824599672525667187482558622701227716212254925837398813278836428805193481064316937182435285668656233017810444672&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;P = &lt;span class=&#34;number&#34;&gt;7743971733771153102128801312798743998017713722732925283466018690899116898707556486947918196848489007935614742583856884731087798825462330340492923214926391&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Q = &lt;span class=&#34;number&#34;&gt;7743971733771153105036156209981171560215008954284943420880584133648389139833517283670475349302080701240378945438911146974137885250527042074631329729385091&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;assert&lt;/span&gt; P*Q == N&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;D = C**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LS_P = gmpy2.legendre(D,P)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LS_Q = gmpy2.legendre(D,Q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d = gmpy2.invert(E, gmpy2.lcm(P-LS_P, Q-LS_Q))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;inv_q, inv_p = inverse_mod(P, Q), inverse_mod(Q, P)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rp, rq = lucas(k=inverse_mod(E, P-LS_P), P=C, Q=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, n=P)[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;], lucas(k=inverse_mod(E, Q-LS_Q), P=C, Q=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, n=Q)[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r = crt(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(rp),&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(rq),P,Q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vp=lucas(k=E, P=r, Q=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, n=P*P)[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tmp_p = C * inverse_mod(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(vp),P*P) %(P*P)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tmp_p = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(tmp_p - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) // P&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mp = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(tmp_p * inv_p % P)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vq=lucas(k=E, P=r, Q=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, n=Q*Q)[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tmp_q = C * inverse_mod(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(vq), Q*Q)%(Q*Q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tmp_q = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(tmp_q - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) // Q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mq = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(tmp_q * inv_q % Q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = crt(mp,mq,P,Q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(long_to_bytes(flag))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;官方板子：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; gmpy2 &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; next_prime, iroot&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; getPrime, inverse, GCD, bytes_to_long, long_to_bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; sage.&lt;span class=&#34;built_in&#34;&gt;all&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;attack2&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;N, e, m, t, X, Y&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    PR = PolynomialRing(QQ, &lt;span class=&#34;string&#34;&gt;&amp;#x27;x,y&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, order=&lt;span class=&#34;string&#34;&gt;&amp;#x27;lex&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    x, y = PR.gens()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    A = -(N-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    F = x * y**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; + A * x + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    G_polys = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# G_&amp;#123;k,i_1,i_2&amp;#125;(x,y) = x^&amp;#123;i_1-k&amp;#125;y_&amp;#123;i_2-2k&amp;#125;f(x,y)^&amp;#123;k&amp;#125;e^&amp;#123;m-k&amp;#125; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; k &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(m + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i_1 &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(k, m+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i_2 &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; [&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;*k, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;*k + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                G_polys.append(x**(i_1-k) * y**(i_2-&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;*k) * F**k * e**(m-k))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    H_polys = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# y_shift H_&amp;#123;k,i_1,i_2&amp;#125;(x,y) = y^&amp;#123;i_2-2k&amp;#125; f(x,y)^k e^&amp;#123;m-k&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; k &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(m + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i_2 &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;*k+&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;*k+t+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            H_polys.append(y**(i_2-&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;*k) * F**k * e**(m-k))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    polys = G_polys + H_polys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    monomials = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; poly &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; polys:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        monomials.append(poly.lm())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dims1 = &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(polys)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dims2 = &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(monomials)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    MM = matrix(QQ, dims1, dims2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; idx, poly &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;enumerate&lt;/span&gt;(polys):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; idx_, monomial &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;enumerate&lt;/span&gt;(monomials):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; monomial &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; poly.monomials():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                MM[idx, idx_] = poly.monomial_coefficient(monomial) * monomial(X, Y)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    B = MM.LLL()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    found_polynomials = &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; pol1_idx &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(B.nrows()):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; pol2_idx &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(pol1_idx + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, B.nrows()):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            P = PolynomialRing(QQ, &lt;span class=&#34;string&#34;&gt;&amp;#x27;a,b&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            a, b = P.gens()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            pol1 = pol2 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; idx_, monomial &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;enumerate&lt;/span&gt;(monomials):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                pol1 += monomial(a,b) * B[pol1_idx, idx_] / monomial(X, Y)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                pol2 += monomial(a,b) * B[pol2_idx, idx_] / monomial(X, Y)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;# resultant&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            rr = pol1.resultant(pol2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;# are these good polynomials?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; rr.is_zero() &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; rr.monomials() == [&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;f&amp;quot;found them, using vectors &lt;span class=&#34;subst&#34;&gt;&amp;#123;pol1_idx&amp;#125;&lt;/span&gt;, &lt;span class=&#34;subst&#34;&gt;&amp;#123;pol2_idx&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                found_polynomials = &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; found_polynomials:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; found_polynomials:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;no independant vectors could be found. This should very rarely happen...&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    PRq = PolynomialRing(QQ, &lt;span class=&#34;string&#34;&gt;&amp;#x27;z&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    z = PRq.gen()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    rr = rr(z, z)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    soly = rr.roots()[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ppol = pol1(z, soly)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    solx = ppol.roots()[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; solx, soly&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;seq&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;r, k, m&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v = vector(Zmod(m), [r, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; k &amp;gt;= &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        M = Matrix(Zmod(m), [[r, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;], [&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v = (M**(k-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)) * v&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ret = v[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; k != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; v[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(ret)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;legendre_symbol&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;a, p&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot; Compute the Legendre symbol a|p using&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        Euler&amp;#x27;s criterion. p is a prime, a is&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        relatively prime to p (if p divides&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        a, then a|p = 0)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        Returns 1 if a has a square root modulo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        p, -1 otherwise.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ls = &lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,(p-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)//&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ls == p - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; ls&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;decrypt&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;c, e, p, q&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    d_p = &amp;#123;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;: &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(e, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, p-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)), -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;: &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(e, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, p+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    d_q = &amp;#123;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;: &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(e, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, q-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)), -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;: &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(e, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, q+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    inv_q = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(p, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, q))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    inv_p = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(q, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, p))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    i_p = legendre_symbol(c**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    i_q = legendre_symbol(c**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r_p = seq(c, d_p[i_p], p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r_q = seq(c, d_q[i_q], q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r = CRT([r_p, r_q], [p, q])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v_rp = seq(r, e, p**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    t_p = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;((c * &lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(v_rp, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, p**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)) % p**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s_p = (t_p - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) // p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v_rq = seq(r, e, q**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    t_q = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;((c * &lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(v_rq, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, q**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)) % q**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s_q = (t_q - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) // q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    m_p = (s_p * inv_p) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    m_q = (s_q * inv_q) % q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    m = CRT([m_p, m_q], [p, q])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; m&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; __name__ == &lt;span class=&#34;string&#34;&gt;&amp;#x27;__main__&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    n = &lt;span class=&#34;number&#34;&gt;59969098213446598961510550233718258878862148298191323654672950330070587404726715299685997489142290693126366408044603303463518341243526241117556011994804902686998166238333549719269703453450958140262475942580009981324936992976252832887660977703209225426388975233018602730303262439218292062822981478737257836581&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    e = &lt;span class=&#34;number&#34;&gt;970698965238639683403205181589498135440069660016843488485401994654202837058754446853559143754852628922125327583411039117445415303888796067576548626904070971514824878024057391507617988385537930417136322298476467215300995795105008488692961624917433064070351961856959734368784774555385603000155569897078026670993484466622344106374637350023474339105113172687604783395923403613555236693496567851779400707953027457705617050061193750124237055690801725151098972239120476113241310088089420901051617493693842562637896252448161948655455277146925913049354086353328749354876619287042077221173795354616472050669799421983520421287&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    c = &lt;span class=&#34;number&#34;&gt;2757297249371055260112176788534868300821961060153993508569437878576838431569949051806118959108641317578931985550844206475198216543139472405873345269094341570473142756599117266569746703013099627523306340748466413993624965897996985230542275127290795414763432332819334757831671028121489964563214463689614865416498886490980692515184662350519034273510244222407505570929178897273048405431658365659592815446583970229985655015539079874797518564867199632672678818617933927005198847206019475149998468493858071672920824599672525667187482558622701227716212254925837398813278836428805193481064316937182435285668656233017810444672&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    alpha = ZZ(e).nbits() / ZZ(n).nbits()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    beta = &lt;span class=&#34;number&#34;&gt;0.44&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    nbits = &lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    delta = &lt;span class=&#34;number&#34;&gt;0.63&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    X = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; ** &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(nbits*(alpha+delta-&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)+&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Y = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; ** &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(nbits*beta+&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    x, y = &lt;span class=&#34;built_in&#34;&gt;map&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;, attack2(n, e, &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;, X, Y))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p_minus_q = y&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p_plus_q = iroot(p_minus_q**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; * n, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p = (p_minus_q + p_plus_q) // &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    q = n // p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;assert&lt;/span&gt; p * q == n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    phi = (p**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) * (q**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    d = inverse(e, phi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    m = decrypt(c, e, p, q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(long_to_bytes(m))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://justgo00.github.io/2023/12/12/2023_%E9%B9%8F%E7%A8%8B%E6%9D%AF/</guid>
            <title>2023鹏程杯</title>
            <link>https://justgo00.github.io/2023/12/12/2023_%E9%B9%8F%E7%A8%8B%E6%9D%AF/</link>
            <pubDate>Tue, 12 Dec 2023 00:44:41 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;leakyrsa&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#leakyrsa&#34;&gt;#&lt;/a&gt; [LeakyRSA]&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.Util.number import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from secret import flag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nbits=512&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=getPrime(nbits)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=getPrime(nbits)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leakBits = 262&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leak = (p ^ q)  &amp;gt;&amp;gt; (nbits - leakBits)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m = bytes_to_long(flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c = pow(m,e,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;n=%d&amp;quot; %n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;c=%d&amp;quot; %c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;leak=%d&amp;quot; %leak)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# n=73822410148110759760164946405270228269255384237831275745269402590230495569279769799226813942899942423718229747478982630879557319063920515141217164980012063064986634632452289290326704640527699568662492105204165609614169349755365956569362139057327962393611139347462018186440108621311077722819578905265976612923      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# c=71808322808599218331233291542779486534747913572475630198802984648982830332628443972652322590637382696027943799004331488098592525306523343649935216419522329722152742610560398216737030893090641493326477786720839849938277402743820773957184083430369443325368720115515840174745825798187125454448297155036065857691      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# leak=2223117424030234543005449667053988296724455736030907136592525175314696509716321&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;除了基本参数，题目还给了 的高 262 比特。所以大致方向就是利用这个信息，以及 来恢复 的高位，然后再走一个 coppersmith 完成对 n 的分解。&lt;/p&gt;
&lt;p&gt;那么我们首先需要根据条件，对 自高位进行剪枝爆破。约束的条件总共有四条：&lt;/p&gt;
&lt;p&gt;其中比较 “强” 的是 ，每当我们选择一个 的比特，那么此时 的对应比特也能确定。  &lt;code&gt;xor(pnew,qnew) == leak[:2+i]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;另外一个我们这里稍微意会一下（就是不严格证明了），就是 高位相乘的结果，前面大约一半的数和 的高位是相同的。 &lt;code&gt;tmp&amp;gt;&amp;gt;(tmp.bit_length()-i//2)== n&amp;gt;&amp;gt;(n.bit_length()-i//2)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当我们定下了当前 的高位，那么 低位全补 0，然后它们相乘的结果要小于 。  &lt;code&gt;(int(pnew.ljust(512,&#39;0&#39;),2)*int(qnew.ljust(512,&#39;0&#39;),2) &amp;lt; n)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当我们定下了当前 的高位，那么 低位全补 1，然后它们相乘的结果要大于 。 &lt;code&gt;(int(pnew.ljust(512,&#39;1&#39;),2)*int(qnew.ljust(512,&#39;1&#39;),2) &amp;gt; n)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.Util.number import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def xor(a,b):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    tmp = &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for i,j in zip(a,b):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        tmp+=str(ord(i)^ord(j))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return tmp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nbits = 512&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leakBits = 262&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leak=2223117424030234543005449667053988296724455736030907136592525175314696509716321&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leak = bin(leak)[2:].rjust(262,&amp;#x27;0&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=73822410148110759760164946405270228269255384237831275745269402590230495569279769799226813942899942423718229747478982630879557319063920515141217164980012063064986634632452289290326704640527699568662492105204165609614169349755365956569362139057327962393611139347462018186440108621311077722819578905265976612923      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=&amp;#x27;1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=&amp;#x27;1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;P=[p]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Q=[q]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in range(261):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    PP=[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    QQ=[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for a in &amp;#x27;01&amp;#x27;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for b in &amp;#x27;01&amp;#x27;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            for pnew,qnew in zip(P,Q):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                pnew = pnew+a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                qnew = qnew+b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                tmp = int(pnew,2)*int(qnew,2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                #print(tmp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if xor(pnew,qnew) == leak[:2+i] and  tmp&amp;gt;&amp;gt;(tmp.bit_length()-i//2)== n&amp;gt;&amp;gt;(n.bit_length()-i//2) and (int(pnew.ljust(512,&amp;#x27;0&amp;#x27;),2)*int(qnew.ljust(512,&amp;#x27;0&amp;#x27;),2) &amp;lt; n)  and (int(pnew.ljust(512,&amp;#x27;1&amp;#x27;),2)*int(qnew.ljust(512,&amp;#x27;1&amp;#x27;),2) &amp;gt; n) :&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    PP.append(pnew)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    QQ.append(qnew)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(len(P))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    P = PP.copy()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Q = QQ.copy()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(P)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# P = [&amp;#x27;1000001000011100010101010110000111101011000100111100000111111100011001101101101110100111101010111011001100111101001100010011110010100000001100010100110110000110000100101000111110110000101100100010111111001101001000001001111101111010000011111000101010100100000010&amp;#x27;, &amp;#x27;1100111011010111101010100001110101111111100110111010101010011101100000101101010010101000010011001110110001011011011010000000100000111100111011101111100011110110111000000101100100101100100011111110011000101011011010100011001010101100111000100100110011001101000010&amp;#x27;, &amp;#x27;1000001000011100010101010110000111101011000100111100000111111100011001101101101110100111101010111011001100111101001100010011110010100000001100010100110110000110000100101000111110110000101100100010111111001101001000001001111101111010000011111000101100010000100010&amp;#x27;, &amp;#x27;1100111011010111101010100001110101111111100110111010101010011101100000101101010010101000010011001110110001011011011010000000100000111100111011101111100011110110111000000101100100101100100011111110011000101011011010100011001010101100111000100100110101111001100010&amp;#x27;, &amp;#x27;1000001000011100010101010110000111101011000100111100000111111100011001101101101110100111101010111011001100111101001100010011110010100000001100010100110110000110000100101000111110110000101100100010111111001101001000001001111101111010000011111000101100010000001010&amp;#x27;, &amp;#x27;1000001000011100010101010110000111101011000100111100000111111100011001101101101110100111101010111011001100111101001100010011110010100000001100010100110110000110000100101000111110110000101100100010111111001101001000001001111101111010000011111000101010100100000011&amp;#x27;, &amp;#x27;1100111011010111101010100001110101111111100110111010101010011101100000101101010010101000010011001110110001011011011010000000100000111100111011101111100011110110111000000101100100101100100011111110011000101011011010100011001010101100111000100100110011001101000011&amp;#x27;, &amp;#x27;1000001000011100010101010110000111101011000100111100000111111100011001101101101110100111101010111011001100111101001100010011110010100000001100010100110110000110000100101000111110110000101100100010111111001101001000001001111101111010000011111000101100010000100011&amp;#x27;, &amp;#x27;1100111011010111101010100001110101111111100110111010101010011101100000101101010010101000010011001110110001011011011010000000100000111100111011101111100011110110111000000101100100101100100011111110011000101011011010100011001010101100111000100100110101111001100011&amp;#x27;, &amp;#x27;1100111011010111101010100001110101111111100110111010101010011101100000101101010010101000010011001110110001011011011010000000100000111100111011101111100011110110111000000101100100101100100011111110011000101011011010100011001010101100111000100100110011001101101011&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里我们能够得到十个可能的 ，不过根据我们的代码， 是等价的，也就意味着其中有两个值是正确的。我们遍历其中的数，走一个 coppersmith 。由于这里泄露的比特不多，经过测试，如果想恢复 250 比特的低位，那么需要设置  &lt;code&gt;beta=0.47,epsilon=0.008&lt;/code&gt; ，跑一次比较久。这里我选择再爆破 5 个比特，这样子可以设  &lt;code&gt;epsilon=0.02&lt;/code&gt; ，跑起来要稍微快些。&lt;/p&gt;
&lt;p&gt;有结果了之后正常解一个 RSA 就可以了。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from tqdm import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;R.&amp;lt;x&amp;gt; = Zmod(n)[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for pbar in tqdm(P[::-1]):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for i in range(32):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        tmp = int(pbar,2)&amp;lt;&amp;lt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        tmp+=i&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        f = tmp*2**245 + x&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        xx = f.monic().small_roots(X=2^245,beta=0.47,epsilon=0.02)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if xx:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            p = f(xx[0])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            print(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 6814449132912466352143200200256605077873329465758477832056090562012411200107156482645933890997787435093806046493913273252717701817613907418845774345791241&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=71808322808599218331233291542779486534747913572475630198802984648982830332628443972652322590637382696027943799004331488098592525306523343649935216419522329722152742610560398216737030893090641493326477786720839849938277402743820773957184083430369443325368720115515840174745825798187125454448297155036065857691      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=73822410148110759760164946405270228269255384237831275745269402590230495569279769799226813942899942423718229747478982630879557319063920515141217164980012063064986634632452289290326704640527699568662492105204165609614169349755365956569362139057327962393611139347462018186440108621311077722819578905265976612923      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=6814449132912466352143200200256605077873329465758477832056090562012411200107156482645933890997787435093806046493913273252717701817613907418845774345791241&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=n//p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d = inverse(65537,(p-1)*(q-1))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(long_to_bytes(pow(c,d,n)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;neltharion_and_arthas&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#neltharion_and_arthas&#34;&gt;#&lt;/a&gt; [Neltharion_and_Arthas]&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import binascii&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import hashlib&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from flag import flag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.Cipher import AES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.Util import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key1 = os.urandom(32)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key2 = b&amp;#x27;tn*-ix6L*tCa*&amp;#125;i*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key_len = len(key2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;assert flag.startswith(b&amp;#x27;flag&amp;#123;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;assert (flag[13] == 45 and flag[18] == 45 and flag[23] == 45 and flag[28] == 45)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = b&amp;quot;2023: &amp;quot;+flag[:13]+flag[14:18]+flag[19:23]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &amp;#x27;a3eae82b4c491e0e&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;h = binascii.unhexlify(hashlib.sha256(key2).hexdigest())[:11]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gift1 = b&amp;#x27;***********************************************************************************************&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gift2 = b&amp;#x27;I tell you this, for when my days have come to an end , you, shall be King.&amp;#x27;+h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def encrypt1(message, key):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cipher = AES.new(key, AES.MODE_CTR, counter=Counter.new(128))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ciphertext = cipher.encrypt(message)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return ciphertext.hex()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def encrypt2(message, key, iv):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    padding = bytes((key_len - len(message) % key_len) * &amp;#x27;&amp;amp;&amp;#x27;, encoding=&amp;#x27;utf-8&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    message += padding&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cipher = AES.new(key, AES.MODE_CBC, iv)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ciphertext = cipher.encrypt(message)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return ciphertext.hex()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;enc_gift1 = &amp;quot;+encrypt1(gift1, key1))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;enc_flag = &amp;quot;+encrypt1(flag1, key1))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;enc_gift2 = &amp;quot;+encrypt2(gift2, key2, flag2))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# enc_gift1 = bad7dbcff968d7cdbf51da011fe94e176fc8e7528e4dd85d2d5fc20ba69cefb7bfd03152a2874705bd2d857ea75b3216a830215db74772d9b9e9c218271d562694d3642d2917972fdb8c7363d8125730a50824cd8dc7e34cd4fa54be427cca&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# enc_flag = c1c78891e30cd4c0aa5ed65c17e8550429c4e640881f9f1d6a56df&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# enc_gift2 = ********c********b**************4***5********3****6a*****a**2********c*8******7***********3***5***2********e*5*************a******5**c***74***********fee046b4d2918096cfa3b76d6622914395c7e28eef&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这题目一眼看过去就知道要爆破了（烦人。）不过题目本身涉及的知识点并不难，稍微了解过 CTR 和 CBC 模式就能做了。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://mmbiz.qpic.cn/sz_mmbiz_png/XpBS9rnxDafibiaFomS2g8k55FLBIVjaJ4yMXwGYkIibVen7MfqGuXbonTI0zFRagGLYIrNTj57gH4x74Yo6GWKDw/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&#34; alt=&#34;图片&#34; /&gt;&lt;/p&gt;
&lt;p&gt;首先是 flag 的第一部分，看到  &lt;code&gt;encrypt1&lt;/code&gt;  函数，使用的是  CTR 模式，并且每一次的计数器都是从同一个位置开始。我们知道 CTR 模式是有点类似于流密码的，因此遭受不住已知明文攻击。而题目使用同样的 key1 对 gift1 和 flag1 分别进行了一次加密，因此只要我们能够知道 gift1 的内容，就能利用 gift1 和其对应密文来恢复 flag1 了。&lt;/p&gt;
&lt;p&gt;首先看到  &lt;code&gt;flag1 = b&amp;quot;2023: &amp;quot;+flag[:13]+flag[14:18]+flag[19:23]&lt;/code&gt; ，而根据前面解出的 flag，我们知道这个比赛的 flag 都是  &lt;code&gt;flag&amp;#123;&amp;#125;&lt;/code&gt;  的格式。于是相当于我们已经知道了 flag1 的 11 个字节的明文，即  &lt;code&gt;2023: flag&amp;#123;&lt;/code&gt; ，对应的，我们也能够恢复 11 字节的 gift1&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;def xor(a,b):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    tmp = &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for i,j in zip(a,b):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        tmp+=chr(i^j)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return tmp.encode(&amp;#x27;latin1&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;enc_gift1 = &amp;#x27;bad7dbcff968d7cdbf51da011fe94e176fc8e7528e4dd85d2d5fc20ba69cefb7bfd03152a2874705bd2d857ea75b3216a830215db74772d9b9e9c218271d562694d3642d2917972fdb8c7363d8125730a50824cd8dc7e34cd4fa54be427cca&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;enc_flag = &amp;#x27;c1c78891e30cd4c0aa5ed65c17e8550429c4e640881f9f1d6a56df&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;enc_flag=bytes.fromhex(enc_flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;enc_gift1=bytes.fromhex(enc_gift1)[:len(enc_flag)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ans = (xor(b&amp;quot;2023: flag&amp;#123;&amp;quot;,xor(enc_gift1,enc_flag)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(ans)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们得到  &lt;code&gt;b&#39;I am Deathw&#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;拿着这个题目名字去百度搜，可以搜到一个暴雪的英雄，死亡之翼，因此这里应该是 Deathwing，再搜一下，就能够搜到原台词： &lt;code&gt;I am Deathwing, the destroyer, the end of all things,inevitable,indomitable,I am the cataclysm&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;最后就可以用这个原台词恢复 flag1 了&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;def xor(a,b):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    tmp = &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for i,j in zip(a,b):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        tmp+=chr(i^j)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return tmp.encode(&amp;#x27;latin1&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;enc_gift1 = &amp;#x27;bad7dbcff968d7cdbf51da011fe94e176fc8e7528e4dd85d2d5fc20ba69cefb7bfd03152a2874705bd2d857ea75b3216a830215db74772d9b9e9c218271d562694d3642d2917972fdb8c7363d8125730a50824cd8dc7e34cd4fa54be427cca&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;enc_flag = &amp;#x27;c1c78891e30cd4c0aa5ed65c17e8550429c4e640881f9f1d6a56df&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;enc_flag=bytes.fromhex(enc_flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;enc_gift1=bytes.fromhex(enc_gift1)[:len(enc_flag)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ans = (xor(b&amp;quot;I am Deathwing, the destroyer, the end of all things,inevitable,indomitable,I am the cataclysm&amp;quot;,xor(enc_gift1,enc_flag)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(ans)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;得到 ： &lt;code&gt;b&#39;2023: flag&amp;#123;4ff732dd2b7445fd&#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后看到  &lt;code&gt;encrypt2&lt;/code&gt;  函数，&lt;/p&gt;
&lt;p&gt;使用的 CBC 模式，&lt;/p&gt;
&lt;p&gt;填充符号用的是  &lt;code&gt;&amp;amp;&lt;/code&gt; ，&lt;/p&gt;
&lt;p&gt;key2 也给出了绝大部分  &lt;code&gt;key2 = b&#39;tn*-ix6L*tCa*&amp;#125;i*&#39;&lt;/code&gt; ，&lt;/p&gt;
&lt;p&gt;gift2 为  &lt;code&gt;gift2 = b&#39;I tell you this, for when my days have come to an end , you, shall be King.&#39;+h&lt;/code&gt; ，其中 h 是 key2 的 sha256 的前 11 个字节。因此我们知道 gift2 的绝大部分内容，以及其最终的字符串长度。测一下不难得到在加密时，&lt;strong&gt;gift2 后面会填充 10 个 &amp;amp;，这是我们爆破 key2 的关键&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;最后 gift2 的密文是   &lt;code&gt;********c********b**************4***5********3****6a*****a**2********c*8******7***********3***5***2********e*5*************a******5**c***74***********fee046b4d2918096cfa3b76d6622914395c7e28eef&lt;/code&gt; ，只有最后一组是完整的，倒数第二组只有最后 10 个字符也就是 5 个字节。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://mmbiz.qpic.cn/sz_mmbiz_png/XpBS9rnxDafibiaFomS2g8k55FLBIVjaJ4kOn13Ive5CUfpVa3XgpqMrskof2J4l1cObqdiccRgkoas1usAjICtXg/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&#34; alt=&#34;图片&#34; /&gt;&lt;/p&gt;
&lt;p&gt;爆破方案就是，根据 CBC 模式，最后一组密文使用 AES 解密后，还要和前一组密文异或才能得到明文。那么这里，我们首先爆破密钥 key2，然后对最后一组密文进行解密，解密后的最后 5 个字节，和倒数第二组还 “幸存” 的 5 个字节进行异或，如果结果是 5 个  &lt;code&gt;&amp;amp;&lt;/code&gt;  字符的话，就说明爆破的密钥 key2 正确。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from string import printable&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from tqdm import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;enc_gift2 = &amp;quot;fee046b4d2918096cfa3b76d6622914395c7e28eef&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.Cipher import AES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def xor(a,b):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    tmp = &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for i,j in zip(a,b):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        tmp+=chr(i^j)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return tmp.encode(&amp;#x27;latin1&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iv = bytes.fromhex(enc_gift2[:10])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cipher = bytes.fromhex(enc_gift2[-32:])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in tqdm(printable):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for j in printable:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for k in printable:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            for l in printable:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                key2 = &amp;#x27;tn%s-ix6L%stCa%s&amp;#125;i%s&amp;#x27;%(i,j,k,l)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                dec = AES.new(key2.encode(), AES.MODE_ECB)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                m = dec.decrypt(cipher)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                m = xor(iv,m[-5:])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if m == b&amp;quot;&amp;amp;&amp;quot;*5:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    print(key2)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后我们得到  &lt;code&gt;key2 = b&#39;tn5-ix6L#tCaG&amp;#125;i6&#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;不过由于这里 flag2 是用作于 AES 的 iv。想要恢复这个 iv 就要用 gift2 第一组明文的 AES 密文和通过 CBC 模式得到的密文进行异或（为了区分，我们分别叫它们 AES 密文 和 CBC 密文好了，其实就是差了一个异或的值）。由于我们已经知道 gift2 的第一组明文了，想要获取其 AES 密文 只需要用 key2 加密一下就好了。那么目前的问题就是如何获得其 CBC 密文，即获得 。而想要获得第一组的 CBC 密文，我们只需要获取第二组的 AES 密文和 CBC 密文，让他们异或一下就好了，而获取第二组的 CBC 密文......，因此问题就来到了最后一组。而最后一组的 CBC 密文我们是知道的，由于 key2 爆出来了，其 sha256 我们也能算，只需要 6 个字节，因为还有 10 个字节的填充符号  &lt;code&gt;&amp;amp;&lt;/code&gt; ，于是 AES 密文也有了，这样就能有前一组的 CBC 密文，有了前一组的 CBC 密文，就能有前前一组的密文了......&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.Cipher import AES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import binascii&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import hashlib&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def xor(a,b):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    tmp = &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for i,j in zip(a,b):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        tmp+=chr(i^j)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key2 = b&amp;#x27;tn5-ix6L#tCaG&amp;#125;i6&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;enc_gift2 = &amp;quot;918096cfa3b76d6622914395c7e28eef&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;h = binascii.unhexlify(hashlib.sha256(key2).hexdigest())[:11]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gift2 = b&amp;#x27;I tell you this, for when my days have come to an end , you, shall be King.&amp;#x27;+h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gift2 += b&amp;#x27;&amp;amp;&amp;#x27;*10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;M = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in range(0,len(gift2),16):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    M.append(gift2[i:i+16])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Minv = M[::-1]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nowcipher = bytes.fromhex(enc_gift2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in range(6):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dec = AES.new(key2, AES.MODE_ECB)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    m = dec.decrypt(nowcipher)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    precipher = xor(Minv[i],m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    nowcipher = precipher&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(precipher)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;得到  &lt;code&gt;a3eae82b4c491e0e&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;结合  &lt;code&gt;assert (flag[13] == 45 and flag[18] == 45 and flag[23] == 45 and flag[28] == 45)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;显然 flag 是一个 uuid，于是最终的 flag 为  &lt;code&gt;flag&amp;#123;4ff732dd-2b74-45fd-a3ea-e82b4c491e0e&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;colorful_matrix&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#colorful_matrix&#34;&gt;#&lt;/a&gt; [colorful_matrix]&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import random&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.Util.number import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.Cipher import AES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.Util.Padding import pad&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import hashlib&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def xor(a, b):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return bytes([a[i%len(a)] ^ b[i%len(b)] for i in range(max(len(a), len(b)))])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = b&amp;#x27;flag&amp;#123;xxxxxx&amp;#125;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key1 = hashlib.md5(os.urandom(16)).hexdigest().encode()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key2 = hashlib.md5(os.urandom(16)).hexdigest().encode()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;num1 = 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = int(gmpy2.next_prime(bytes_to_long(key1 + os.urandom(64))))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ms = [random.getrandbits(256) for _ in range(num1)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;qs = [getPrime(1024) for _ in range(num1)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ns = [p * qs[_] + ms[_] for _ in range(num1)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;num2 = 37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x = bytes_to_long(key2 + os.urandom(32))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;A = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;B = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in range(num2):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a = random.getrandbits(512)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b = a * x % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    gift = (2 ** 128 - 1) * 2 ** 400&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    A.append(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    B.append((b &amp;amp; gift) &amp;gt;&amp;gt; 400)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bh + bm + bl = a * x + kp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bh * 2^528 + bl = a * x - bm * 2^400 + kp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;238          400&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iv = long_to_bytes(random.getrandbits(128))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = xor(key1,key2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;aes = AES.new(key1,AES.MODE_CBC,iv)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;enc = aes.encrypt(pad(flag,48))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(f&amp;#x27;ns = &amp;#123;ns&amp;#125;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(f&amp;#x27;A = &amp;#123;A&amp;#125;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(f&amp;#x27;B = &amp;#123;B&amp;#125;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(f&amp;#x27;enc = &amp;#123;enc&amp;#125;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# ns = [38630062416586710341458654419912504176237737247477839749085033080367529539859992076587411537805430366799412095876782912512744262957062106155418341531142309858429218208463637096843365217114990765965110566415965985105403996944993619708417839598461935470469097206342256014086162845948208599334925650727933097059538199199685364793545286980392966271769914201657672004082101110775504946586957241075964270454872257405872181588544468173017149763827540561921126826597515171761064800381983526515300315517818122598179574900255685121991744205071544970, 41522753602903133841910260331594875922287719226997542592715810409935551768308104573333760854332533376702631593490915962706512143045107096658851885513727202513616813054397657610854303071682604806070009002234312854968365250748142324994926715544722158698813288131533399544263105858513134170084625526223987620550110255872688155827773099232631041345207194483609514502522566888883736218471849075697433311580004701384847571029783514418685068903758509270527252444771313048094566344002411364378658592832008194309873599342916391769027015343562030852, 41542983120532762175372001624404625565366126179958909731196555044290633581761361918706298428954501507557598076910710787422049443564800530253137695341299743714514361560156305534490483794181933110893966453220306980682146624294992100948497284459992930850081254114996830645068636306625330524465991656430799359422407117440063911943625477783216502523414967017151717597372146324488526509879620785458016456593044828784565522423332830549325397893426472247197776412026158371655860380929692662547882654137064941217130915364306358205055760044763651406, 42853015443318352230776688785915441259875645365236808434164117288657978345098324019250085686482568413223085548506789311679316323466083886556772338612177680666217592255234589446979456714341877135596118517098603502394776049958587301113539552072352462301070489369653155854389890761241450743607560719433910573462283304103064437843063566946231984094581307498714742271881862348689297267558023093643893310002803310596286441071314219020032740336515363830250477649030557311461077069407775907176409762823453607196260454965048316567154365877848652918, 31152961872836435078296602982779340735140569916125711058616435902653202922218293684857125091648631460215120167354825278469413413558325850576700866199515219603448136082693185200558425103833947831228064760642508443585470729998592994719564254894176473779555436230174300038353978808432410463449170865897259181312953584408177790825688497584119467820716449210429423337019604137134889051973100340798405991782200038835066294194815913887924272593864934325496116821854183293510325217934617021428710898873475027666892706022106386340733691632884942848]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# A = [12789809461864875489953273982997537541385904671489556544122095227619591140533414669794423644619127980362623481580128258914287474542792728686579090501397390, 10463950513938701625808784986819665844287315724639315128677227520960105897990256530542006653611594269012930935073966767351788182657861624733138283749460454, 5253244650607533810967862436125419800679723144526973463211784033045021824966560017919956773745212139142517766154626849426827164032731516615725539069585525, 5644589184984504085855423002268477365020278981591337230721358313393863912025011466727192648804002734561676112555123877764178690726130713927642577324443238, 4231732567865883627242742552738439372803539125622706171540910152922080004603138662537022248675968288205781990968838888633816697065257733344028576518431020, 2483388920404524165854675814798022834892112957478917588986471421083048888193527751575039626887367465858751417977246719312923814782809309525841102293919541, 3252353812256192711411255830105475125944842449239880454539397067913664088094160819193268643401968970009466652179043139341471403913410402646923633696154454, 11575010486066232687430367040977113580882826853104996856464797182632266635060724100357205810604915010810884387573114266349621457564659060272935537811111850, 116107444921917032985259963199427176510900273385517435613848456370557161312731449337837406563733552524777525870560544042690403987311424820755256727586807, 5859050133610438843641532306693688255014116940390205022708310454673159702673207152462501010791971695002865650407033762568636006764435795015869726867643634, 5954075553161305677556950650395792531753502207483036473422070018485916621872566706504374038792527687442272405589975343003802956899043321092006127828986114, 4571747544457157571652286537158051402285727327066029382085461714597609990601683125994983291866807816649968826930652068427193317966970789937746419206862747, 7166507561570980603812241332170524724051295937096000768984168029904561160020043035660087151672164814332446644696618077835020463308343415953131944864257266, 4852042788460566411381271873349329096978244586097817622748766708426751073559942708861852208085367014057217116211249133109246735634468823924185525972777655, 11962941918999276757181090570698839032103646409734781047194175833198626142790676141060052011581957980660140931408560130449153056874213033784715711461403345, 10324508881746579337486319574059121005227580732153432145860775835052420139026016902518605634385512021513380467928195663920843022679549517463264144660593354, 13276257094435850052122403884510025189232513948002582716865201271569293297601525601586036713056700716929820641888489806178376555435219630186396004003438962, 6525051273399089095687950615197786094425890004112675057642687348101531212837185750558500720306108976630502328600886080197626115513445112562084719104488315, 12922888505610354933000354792496863801007995464403098763485264334670452387681468617068312646367483171083114539083453125614861357751571161533921864394641576, 9489726784141062031514945333087338495823600723655465328127755755022980083351477888038160719541864899912899592065620071698977397662002448273876711116012763, 10630316198843195148937849513165933809121991192035364160395429088101265852052098101114542104327663563661384303617672183366879116750889320604308038959012109, 12675564142993964272844760955973914547747654087592111324261755301551267959231076883765863344473167582531968290671984039948163579495803204811731286282708940, 11847724105274460405216443356582445218232627275228120716891711887600046501095390733716854871561352002320819466803698088448952127166615410820121973485089326, 5131676593756685549522564504727003861447389891839469018437277330988047271086971907217360711863971849879439418231726349935396008040776952541710218842744018, 8049060452950901277510497437779182190254362319091882684392717180429468875432078713802857488901441344429723298843967365750616860588029426099852763482179470, 2365060249260571713545479629411006471094806409182638354076861269679377537605360223984548798658469783472746989448405310909017645138161178501458084966625559, 7467521246204465304438401242342633361751371318557249418344587207503257890765643838557008735305668588521988487342275527781708126255070883848829062790678347, 5841608816993144092409175658260479687582056537041472535819914412630519543198558564258699185557903902095773598614097026740427138629173672250387442834578787, 3935779917509948624841228665498558015416911059417306651751360048412619176423173794541812556512582747588138532941031730797102738268660078594473168666677171, 1459083415233950534805962555425717865938763752937036513111696179351002303817986848490146888626704327653287774806488952733813718461674376764427084478395399, 6426876689549337938550615491086475536072547585103523407263007393570982327518298678278232288342601754164640081474537962710401178482959474762541185760732929, 5241364650650467046722868257809607948071188801137204831449976666385482519613365369974704486723941517654753205012497273820309153659423928739972270634209996, 6387483223002092292686097811446217867743566298067033295601210265979889577756648605354064672061975949925472022416479935990178719227937307079186916383092053, 170562164015232424518655058158727202269056868720093972639058422975773575660534168774299548952867348396798580779605954510297102765330549642318362861226163, 10004133230245713370426176448219282796530473722412487408402635996842671302539458739305597027107498342509248085998067976408732789438099488867425813748783724, 12325342879747412722323355648741345730921040452129462974449188258885453690169624888480720109964630270938743431623479816739889661554987977051169401841580388, 641543989928732942291347866597230552820621633110802944556141221591498546555080480758772801043509130524233886009444044150447511986129019395067102094826363]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# B = [108715652691370707411987210267535348806, 131676833696101475747102644851662113271, 122436706338521558335484593966234623745, 255864866572301552398412638474857375629, 81098761191414480003681301866161112100, 322322463176364397336266169283851913620, 198167679309202772183020662350938553923, 326360662842236388778385468938922853242, 241812832858991643670485138860832357660, 69768236619183466076110136290750715548, 32383134960394164339076842474280712870, 147747232748027508904245311745435517130, 25327826075608705748116808975774398964, 65295332681674581261444632606267440749, 236756211690281667988216748814564193312, 106435149910135092172124474857722935730, 270727089812520941022075406571244846193, 206881193220261276126028739930244917728, 131961838897694897398340205404861333362, 219211823942216355573832791993673934321, 150960424777134558142309786444952807101, 51112048255939343109218372373173385772, 182065623911902509203036774197184164110, 168420344895532090057957641972492853410, 301808673225362418769168353084541667053, 132272458662433671393247350648662880688, 495672626901999558635736361346563007, 182444159345379042372018248514964944782, 144584137563407779776361378564517880036, 338518705859818740467225748906995999694, 205885429741815676881969528495365151019, 233897982464483450790005953366237992668, 279307677123402840425362992920185630901, 133493426228159673166382443820069696429, 316624110847744871475435405969944304329, 187931604382397525131117897387179435812, 220019728924915067987393012581921164417]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# enc = b&amp;#x27;cTmkMb\xfc\x05|\x1d\xc7\x13\xbaSe\xe0\xbd\xc0\xd9\xa3\x8cwo\x82yN[B&amp;amp;\x80\xd7KPwQ`\x9c\xbf&amp;lt;y\x8e\x8a\x97e\xa074\xb2&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#c7-11ee-ae14-ac1203ab14da&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;首先看到&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;p = int(gmpy2.next_prime(bytes_to_long(key1 + os.urandom(64))))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ms = [random.getrandbits(256) for _ in range(num1)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;qs = [getPrime(1024) for _ in range(num1)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ns = [p * qs[_] + ms[_] for _ in range(num1)]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;是一个典型的 AGCD 的攻击场景，这里暂时就不细说了，感兴趣的读者可以看这篇文章 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tYXJ0aW5yYWxicmVjaHQud29yZHByZXNzLmNvbS8yMDIwLzAzLzIxL3RoZS1hcHByb3hpbWF0ZS1nY2QtcHJvYmxlbS8=&#34;&gt;https://martinralbrecht.wordpress.com/2020/03/21/the-approximate-gcd-problem/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;用到的格子就是&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://mmbiz.qpic.cn/sz_mmbiz_png/XpBS9rnxDafibiaFomS2g8k55FLBIVjaJ4CLpb2iaw0iassXAianogovjkdHwhYG3jZlAGtcYBhca1R7OYph3ONgJ0A/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&#34; alt=&#34;图片&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ns = [38630062416586710341458654419912504176237737247477839749085033080367529539859992076587411537805430366799412095876782912512744262957062106155418341531142309858429218208463637096843365217114990765965110566415965985105403996944993619708417839598461935470469097206342256014086162845948208599334925650727933097059538199199685364793545286980392966271769914201657672004082101110775504946586957241075964270454872257405872181588544468173017149763827540561921126826597515171761064800381983526515300315517818122598179574900255685121991744205071544970, 41522753602903133841910260331594875922287719226997542592715810409935551768308104573333760854332533376702631593490915962706512143045107096658851885513727202513616813054397657610854303071682604806070009002234312854968365250748142324994926715544722158698813288131533399544263105858513134170084625526223987620550110255872688155827773099232631041345207194483609514502522566888883736218471849075697433311580004701384847571029783514418685068903758509270527252444771313048094566344002411364378658592832008194309873599342916391769027015343562030852, 41542983120532762175372001624404625565366126179958909731196555044290633581761361918706298428954501507557598076910710787422049443564800530253137695341299743714514361560156305534490483794181933110893966453220306980682146624294992100948497284459992930850081254114996830645068636306625330524465991656430799359422407117440063911943625477783216502523414967017151717597372146324488526509879620785458016456593044828784565522423332830549325397893426472247197776412026158371655860380929692662547882654137064941217130915364306358205055760044763651406, 42853015443318352230776688785915441259875645365236808434164117288657978345098324019250085686482568413223085548506789311679316323466083886556772338612177680666217592255234589446979456714341877135596118517098603502394776049958587301113539552072352462301070489369653155854389890761241450743607560719433910573462283304103064437843063566946231984094581307498714742271881862348689297267558023093643893310002803310596286441071314219020032740336515363830250477649030557311461077069407775907176409762823453607196260454965048316567154365877848652918, 31152961872836435078296602982779340735140569916125711058616435902653202922218293684857125091648631460215120167354825278469413413558325850576700866199515219603448136082693185200558425103833947831228064760642508443585470729998592994719564254894176473779555436230174300038353978808432410463449170865897259181312953584408177790825688497584119467820716449210429423337019604137134889051973100340798405991782200038835066294194815913887924272593864934325496116821854183293510325217934617021428710898873475027666892706022106386340733691632884942848]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x0,x1,x2,x3,x4 = ns&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;B = matrix(ZZ,[[2^256,x1,x2,x3,x4],[0,-x0,0,0,0],[0,0,-x0,0,0],[0,0,0,-x0,0],[0,0,0,0,-x0]])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;L = B.LLL()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ans= L[0][0] // 2^256&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p0 = abs(ans)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = (x0 // p0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# p = 293423658885957174953198318664231534672400520068303593221989900395768107225130267646792968959460384248015583618158947268381852534151783869878808621629530642974652628810907251607210136313789978156955302211733219987661815438401343683&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key1 = long_to_bytes(int(p))[:32]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;有了 p 之后，我们就能够获取到 ms，而  &lt;code&gt;ms = [random.getrandbits(256) for _ in range(num1)]&lt;/code&gt; ，&lt;/p&gt;
&lt;p&gt;另外下面还有一个&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;for i in range(num2):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a = random.getrandbits(512)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;因此根据 ms 和 a，典型的 mt19937 预测随机数，就能搞到 iv，然后看到&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;iv = long_to_bytes(random.getrandbits(128))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = xor(key1,key2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;aes = AES.new(key1,AES.MODE_CBC,iv)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;enc = aes.encrypt(pad(flag,48))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里加密用的是 key1 而不是 key，（难崩）因此根本不需要管 key2，直接用 iv 和 key1 进行一个 AES 密文的解即可。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ns = [38630062416586710341458654419912504176237737247477839749085033080367529539859992076587411537805430366799412095876782912512744262957062106155418341531142309858429218208463637096843365217114990765965110566415965985105403996944993619708417839598461935470469097206342256014086162845948208599334925650727933097059538199199685364793545286980392966271769914201657672004082101110775504946586957241075964270454872257405872181588544468173017149763827540561921126826597515171761064800381983526515300315517818122598179574900255685121991744205071544970, 41522753602903133841910260331594875922287719226997542592715810409935551768308104573333760854332533376702631593490915962706512143045107096658851885513727202513616813054397657610854303071682604806070009002234312854968365250748142324994926715544722158698813288131533399544263105858513134170084625526223987620550110255872688155827773099232631041345207194483609514502522566888883736218471849075697433311580004701384847571029783514418685068903758509270527252444771313048094566344002411364378658592832008194309873599342916391769027015343562030852, 41542983120532762175372001624404625565366126179958909731196555044290633581761361918706298428954501507557598076910710787422049443564800530253137695341299743714514361560156305534490483794181933110893966453220306980682146624294992100948497284459992930850081254114996830645068636306625330524465991656430799359422407117440063911943625477783216502523414967017151717597372146324488526509879620785458016456593044828784565522423332830549325397893426472247197776412026158371655860380929692662547882654137064941217130915364306358205055760044763651406, 42853015443318352230776688785915441259875645365236808434164117288657978345098324019250085686482568413223085548506789311679316323466083886556772338612177680666217592255234589446979456714341877135596118517098603502394776049958587301113539552072352462301070489369653155854389890761241450743607560719433910573462283304103064437843063566946231984094581307498714742271881862348689297267558023093643893310002803310596286441071314219020032740336515363830250477649030557311461077069407775907176409762823453607196260454965048316567154365877848652918, 31152961872836435078296602982779340735140569916125711058616435902653202922218293684857125091648631460215120167354825278469413413558325850576700866199515219603448136082693185200558425103833947831228064760642508443585470729998592994719564254894176473779555436230174300038353978808432410463449170865897259181312953584408177790825688497584119467820716449210429423337019604137134889051973100340798405991782200038835066294194815913887924272593864934325496116821854183293510325217934617021428710898873475027666892706022106386340733691632884942848]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = 293423658885957174953198318664231534672400520068303593221989900395768107225130267646792968959460384248015583618158947268381852534151783869878808621629530642974652628810907251607210136313789978156955302211733219987661815438401343683&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ms = [i%p for i in ns]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for each in ms:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    tmp = each&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while tmp &amp;gt;0:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        x.append(tmp%(2**32))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        tmp &amp;gt;&amp;gt;= 32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;A = [12789809461864875489953273982997537541385904671489556544122095227619591140533414669794423644619127980362623481580128258914287474542792728686579090501397390, 10463950513938701625808784986819665844287315724639315128677227520960105897990256530542006653611594269012930935073966767351788182657861624733138283749460454, 5253244650607533810967862436125419800679723144526973463211784033045021824966560017919956773745212139142517766154626849426827164032731516615725539069585525, 5644589184984504085855423002268477365020278981591337230721358313393863912025011466727192648804002734561676112555123877764178690726130713927642577324443238, 4231732567865883627242742552738439372803539125622706171540910152922080004603138662537022248675968288205781990968838888633816697065257733344028576518431020, 2483388920404524165854675814798022834892112957478917588986471421083048888193527751575039626887367465858751417977246719312923814782809309525841102293919541, 3252353812256192711411255830105475125944842449239880454539397067913664088094160819193268643401968970009466652179043139341471403913410402646923633696154454, 11575010486066232687430367040977113580882826853104996856464797182632266635060724100357205810604915010810884387573114266349621457564659060272935537811111850, 116107444921917032985259963199427176510900273385517435613848456370557161312731449337837406563733552524777525870560544042690403987311424820755256727586807, 5859050133610438843641532306693688255014116940390205022708310454673159702673207152462501010791971695002865650407033762568636006764435795015869726867643634, 5954075553161305677556950650395792531753502207483036473422070018485916621872566706504374038792527687442272405589975343003802956899043321092006127828986114, 4571747544457157571652286537158051402285727327066029382085461714597609990601683125994983291866807816649968826930652068427193317966970789937746419206862747, 7166507561570980603812241332170524724051295937096000768984168029904561160020043035660087151672164814332446644696618077835020463308343415953131944864257266, 4852042788460566411381271873349329096978244586097817622748766708426751073559942708861852208085367014057217116211249133109246735634468823924185525972777655, 11962941918999276757181090570698839032103646409734781047194175833198626142790676141060052011581957980660140931408560130449153056874213033784715711461403345, 10324508881746579337486319574059121005227580732153432145860775835052420139026016902518605634385512021513380467928195663920843022679549517463264144660593354, 13276257094435850052122403884510025189232513948002582716865201271569293297601525601586036713056700716929820641888489806178376555435219630186396004003438962, 6525051273399089095687950615197786094425890004112675057642687348101531212837185750558500720306108976630502328600886080197626115513445112562084719104488315, 12922888505610354933000354792496863801007995464403098763485264334670452387681468617068312646367483171083114539083453125614861357751571161533921864394641576, 9489726784141062031514945333087338495823600723655465328127755755022980083351477888038160719541864899912899592065620071698977397662002448273876711116012763, 10630316198843195148937849513165933809121991192035364160395429088101265852052098101114542104327663563661384303617672183366879116750889320604308038959012109, 12675564142993964272844760955973914547747654087592111324261755301551267959231076883765863344473167582531968290671984039948163579495803204811731286282708940, 11847724105274460405216443356582445218232627275228120716891711887600046501095390733716854871561352002320819466803698088448952127166615410820121973485089326, 5131676593756685549522564504727003861447389891839469018437277330988047271086971907217360711863971849879439418231726349935396008040776952541710218842744018, 8049060452950901277510497437779182190254362319091882684392717180429468875432078713802857488901441344429723298843967365750616860588029426099852763482179470, 2365060249260571713545479629411006471094806409182638354076861269679377537605360223984548798658469783472746989448405310909017645138161178501458084966625559, 7467521246204465304438401242342633361751371318557249418344587207503257890765643838557008735305668588521988487342275527781708126255070883848829062790678347, 5841608816993144092409175658260479687582056537041472535819914412630519543198558564258699185557903902095773598614097026740427138629173672250387442834578787, 3935779917509948624841228665498558015416911059417306651751360048412619176423173794541812556512582747588138532941031730797102738268660078594473168666677171, 1459083415233950534805962555425717865938763752937036513111696179351002303817986848490146888626704327653287774806488952733813718461674376764427084478395399, 6426876689549337938550615491086475536072547585103523407263007393570982327518298678278232288342601754164640081474537962710401178482959474762541185760732929, 5241364650650467046722868257809607948071188801137204831449976666385482519613365369974704486723941517654753205012497273820309153659423928739972270634209996, 6387483223002092292686097811446217867743566298067033295601210265979889577756648605354064672061975949925472022416479935990178719227937307079186916383092053, 170562164015232424518655058158727202269056868720093972639058422975773575660534168774299548952867348396798580779605954510297102765330549642318362861226163, 10004133230245713370426176448219282796530473722412487408402635996842671302539458739305597027107498342509248085998067976408732789438099488867425813748783724, 12325342879747412722323355648741345730921040452129462974449188258885453690169624888480720109964630270938743431623479816739889661554987977051169401841580388, 641543989928732942291347866597230552820621633110802944556141221591498546555080480758772801043509130524233886009444044150447511986129019395067102094826363]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for each in A:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    tmp = each&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while tmp &amp;gt;0:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        x.append(tmp%(2**32))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        tmp &amp;gt;&amp;gt;= 32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(len(x))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from MT19937_Crack import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mtb = MT19937Recover()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;result = mtb.go_on(x) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;enc = b&amp;#x27;cTmkMb\xfc\x05|\x1d\xc7\x13\xbaSe\xe0\xbd\xc0\xd9\xa3\x8cwo\x82yN[B&amp;amp;\x80\xd7KPwQ`\x9c\xbf&amp;lt;y\x8e\x8a\x97e\xa074\xb2&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import random&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.Util.number import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.Cipher import AES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key1 = b&amp;#x27;0b5e732a48fc8c6f5ac6366212d2bc59&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iv = long_to_bytes(result.getrandbits(128))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;aes = AES.new(key1,AES.MODE_CBC,iv)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;enc = aes.decrypt(enc)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(enc)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;得到 b&#39;flag {86baa4ed-5ec7-11ee-ae14-ac1203ab14da}\x06\x06\x06\x06\x06\x06&#39;&lt;/p&gt;
&lt;p&gt;当然，如果还是想要解出 key2 ，其实这就是 2022 年全国高校密码数学挑战赛的一个赛题，可以去看一下 @tover 的博客 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90b3Zlci54eXovcC9ITlAtbm90ZS8jTGV2ZWwtMw==&#34;&gt;https://tover.xyz/p/HNP-note/#Level-3&lt;/span&gt; ，写的挺详细了已经。&lt;/p&gt;
&lt;h3 id=&#34;secretshare&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#secretshare&#34;&gt;#&lt;/a&gt; [SecretShare]&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import random &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from secret import flag, secret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.Util.number import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n = 21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;t = 21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;A = [secret]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in range(n-1):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    A.append(random.getrandbits(1024))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in range(n):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    X.append(random.getrandbits(1024))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = getPrime(1026)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def f(x):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    tmp = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for i in range(n):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        res = (res + tmp * A[i]) % p &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        tmp = tmp *x  % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return res % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# res = a0+a1*x+a2*x^2+a3*x3+...+a20*x20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;R = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in range(n):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    R.append(f(X[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;P = secret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Q = getPrime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;N = P * Q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m = bytes_to_long(flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e = 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c = pow(m, e, N)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi=(P - 1) * (Q - 1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d = pow(e,-1,phi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(long_to_bytes(pow(c,d,N)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fi = open(&amp;#x27;output.txt&amp;#x27;,&amp;#x27;w&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in range(t-1):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fi.write(str(X[i])+&amp;#x27; &amp;#x27;+str(R[i])+&amp;#x27;\n&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;leak = %d&amp;quot;%R[-1])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;p = %d&amp;quot;%p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;c = %d&amp;quot;%c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;N = %d&amp;quot;%N)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# leak = 158171468736013100218170873274656605219228738469715092751861925345310881653082508445746109167302799236685145510095499361526242392251594397820661050281094210672424887670015189702781308615421102937559185479455827148241690888934661637911906309379701856488858180027365752169466863585611322838180758159364570481257&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# p = 667548632459029899397299221540978856425474915828934339291333387574324630349258515018972045406265448494845331262999241448002076917383740651362641947814545076390796789402373579283727117618532504865966299599663825771187433223531022829811594806917984414530614469374596457149431218829297339079019894262229453357029   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# c = 9658009093151541277762773618550582280013680172161026781649630205505443184765264518709081169475689440555639354980432557616120809346519461077355134139495745998317849357705381020225760061125236265304057301286196004542729553944161451832173970613915423841610378207266606500956362098150141825329354727367056070349148059780287916811442861961254066733726576151134458892613951223277692935141880749737598416235307087782001086096114978527447987308876878393763055893556123029990282534497668077854186604106027698257663251502775547705641708624619340185646943640576690633662704397191379303254341343433077302686466850600522990402912&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# N = 11790604055677230214731474049594783873473779547159534481643303694816346271798870343160061559787963631020684982858033776446193418629055210874285696446209220404060653230407249409973790191858423402504530660556839353260629987853933304089439885784684686555554108157760445567974629355878575105480273451284714281430590737346099023372211403461861104391534461524711472734572409128196536805998116015230502045333769525693468193385557827209520108839913096017750428926467123493650506193757937746017474062985480713594474378324234033232933140389879312722642144536418253323908290256009510135710208223393009237664704631175216240376891&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这道题就更简单了（可能又是出题失误，信息放出来多了），&lt;/p&gt;
&lt;p&gt;其中  &lt;code&gt;f(x)&lt;/code&gt;  函数可以记为&lt;/p&gt;
&lt;p&gt;数组 A 和 X 都是由 21 个 1024 比特的数组成，其中 A 的后 20 个是  &lt;code&gt;random.getrandbits(1024)&lt;/code&gt; ， 21 个 X 都是  &lt;code&gt;random.getrandbits(1024)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;1024/32*21=672，足足的了。直接就能往前把 20 个 a 全部恢复。这里又把 x 全部给出来了，对应的 r 也给了，P  就是&lt;/p&gt;
&lt;p&gt;那直接&lt;/p&gt;
&lt;p&gt;再解一下 RSA 就完活了。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;with open(&amp;quot;output.txt&amp;quot;) as f:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        data = f.read().split(&amp;quot;\n&amp;quot;)[:-1]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X=[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;R=[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for each in data:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        tm = each.split(&amp;quot; &amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        X.append(int(tm[0]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        R.append(int(tm[1]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(len(X))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for each in X:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        tmp = each&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        while tmp &amp;gt;0:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                x.append(tmp%(2**32))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                tmp &amp;gt;&amp;gt;= 32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(len(x))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from MT19937_Crack import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mtb = MT19937Recover()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;result = mtb.go_back(x,608)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def factory(res):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ans=[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for i in range(0,len(res)//32):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                tmp = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                for j in range(32):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        tmp+=res[32*i+j]&amp;lt;&amp;lt;(j*32)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                ans.append(tmp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return ans&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;A = factory(result)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;value = result+x&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;result = mtb.go_back(value,32)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;A = factory(result)+A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(len(A))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x =  X[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = R[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = 667548632459029899397299221540978856425474915828934339291333387574324630349258515018972045406265448494845331262999241448002076917383740651362641947814545076390796789402373579283727117618532504865966299599663825771187433223531022829811594806917984414530614469374596457149431218829297339079019894262229453357029&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in range(1,21):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        res = (res-A[i-1]*x**i)%p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;N = 11790604055677230214731474049594783873473779547159534481643303694816346271798870343160061559787963631020684982858033776446193418629055210874285696446209220404060653230407249409973790191858423402504530660556839353260629987853933304089439885784684686555554108157760445567974629355878575105480273451284714281430590737346099023372211403461861104391534461524711472734572409128196536805998116015230502045333769525693468193385557827209520108839913096017750428926467123493650506193757937746017474062985480713594474378324234033232933140389879312722642144536418253323908290256009510135710208223393009237664704631175216240376891&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=res&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=N//res&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c = 9658009093151541277762773618550582280013680172161026781649630205505443184765264518709081169475689440555639354980432557616120809346519461077355134139495745998317849357705381020225760061125236265304057301286196004542729553944161451832173970613915423841610378207266606500956362098150141825329354727367056070349148059780287916811442861961254066733726576151134458892613951223277692935141880749737598416235307087782001086096114978527447987308876878393763055893556123029990282534497668077854186604106027698257663251502775547705641708624619340185646943640576690633662704397191379303254341343433077302686466850600522990402912&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e = 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.Util.number import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d = inverse(e,(p-1)*(q-1))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(long_to_bytes(pow(c,d,p*q)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://justgo00.github.io/2023/12/11/hello-world/</guid>
            <title>Hello World</title>
            <link>https://justgo00.github.io/2023/12/11/hello-world/</link>
            <pubDate>Mon, 11 Dec 2023 13:15:22 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;Welcome to &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvLw==&#34;&gt;Hexo&lt;/span&gt;! This is your very first post. Check &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv&#34;&gt;documentation&lt;/span&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=&#34;&gt;troubleshooting&lt;/span&gt; or you can ask me on &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==&#34;&gt;GitHub&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#quick-start&#34;&gt;#&lt;/a&gt; Quick Start&lt;/h2&gt;
&lt;h3 id=&#34;create-a-new-post&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#create-a-new-post&#34;&gt;#&lt;/a&gt; Create a new post&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo new &lt;span class=&#34;string&#34;&gt;&amp;quot;My New Post&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s&#34;&gt;Writing&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-server&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#run-server&#34;&gt;#&lt;/a&gt; Run server&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=&#34;&gt;Server&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;generate-static-files&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#generate-static-files&#34;&gt;#&lt;/a&gt; Generate static files&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s&#34;&gt;Generating&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;deploy-to-remote-sites&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#deploy-to-remote-sites&#34;&gt;#&lt;/a&gt; Deploy to remote sites&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s&#34;&gt;Deployment&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
